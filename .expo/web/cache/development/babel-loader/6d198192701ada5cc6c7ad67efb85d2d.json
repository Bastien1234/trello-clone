{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport constants from \"../constants/constants\";\nimport HeaderScreen from \"./HeaderScreen\";\nimport OptionScreen from \"./OptionScreen\";\nimport DB from \"./../fakeDB/db\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar WorkspaceScreen = function WorkspaceScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      database = _useState2[0],\n      setDatabase = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      addingCard = _useState4[0],\n      setAddingCard = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      addingList = _useState6[0],\n      setAddingList = _useState6[1];\n\n  var SELECTED = \"Espace 1\";\n  useEffect(function () {\n    var DBcopy = DB[0];\n    DBcopy.spaces.forEach(function (el) {\n      if (el.name === SELECTED) {\n        setDatabase(el);\n      }\n    });\n    console.log(database);\n  }, []);\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showOptions = _useState8[0],\n      setShowOptions = _useState8[1];\n\n  var optionAnim = useRef(new Animated.Value(0)).current;\n  var addCardAnim = useRef(new Animated.Value(0)).current;\n\n  var optionKickingIn = function optionKickingIn() {\n    Animated.timing(optionAnim, {\n      toValue: 4,\n      duration: 555,\n      useNativeDriver: false\n    }).start();\n  };\n\n  var newCardAnimation = function newCardAnimation() {\n    Animated.timing(addCardAnim, {\n      toValue: 1,\n      duration: 333,\n      useNativeDriver: false\n    }).start();\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: styles.global,\n    children: [addingCard === false && addingList === false ? _jsx(HeaderScreen, {\n      title: SELECTED,\n      showOptions: showOptions,\n      setShowOptions: setShowOptions,\n      optionKickingIn: optionKickingIn\n    }) : null, addingCard === true ? _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        backgroundColor: constants.blue,\n        height: 60,\n        alignItems: 'center'\n      },\n      children: [_jsx(Pressable, {\n        onPress: function onPress() {\n          return setAddingCard(false);\n        },\n        children: _jsx(Image, {\n          source: require(\"./../assets/svg/cancel.png\"),\n          style: styles.png\n        })\n      }), _jsx(Text, {\n        style: {\n          color: \"white\",\n          flex: 1,\n          fontSize: 25,\n          marginLeft: 20,\n          alignSelf: \"center\"\n        },\n        children: \"Ajouter une carte...\"\n      }), _jsx(Pressable, {\n        children: _jsx(Image, {\n          source: require(\"./../assets/svg/check.png\"),\n          style: styles.png\n        })\n      })]\n    }) : null, addingList === true ? _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        backgroundColor: constants.blue,\n        height: 60,\n        alignItems: 'center'\n      },\n      children: [_jsx(Pressable, {\n        onPress: function onPress() {\n          return setAddingList(false);\n        },\n        children: _jsx(Image, {\n          source: require(\"./../assets/svg/cancel.png\"),\n          style: styles.png\n        })\n      }), _jsx(Text, {\n        style: {\n          color: \"white\",\n          flex: 1,\n          fontSize: 25,\n          marginLeft: 20,\n          alignSelf: \"center\"\n        },\n        children: \"Ajouter une liste...\"\n      }), _jsx(Pressable, {\n        children: _jsx(Image, {\n          source: require(\"./../assets/svg/check.png\"),\n          style: styles.png\n        })\n      })]\n    }) : null, _jsx(View, {\n      style: styles.ScrollViewContainer,\n      children: _jsxs(ScrollView, {\n        style: styles.mainBody,\n        horizontal: true,\n        children: [database[\"containers\"] ? database.containers.map(function (cont, idx) {\n          return _jsxs(View, {\n            style: styles.card,\n            children: [_jsxs(View, {\n              style: {\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\"\n              },\n              children: [_jsx(Text, {\n                style: {\n                  marginLeft: 10,\n                  fontSize: 17,\n                  marginTop: 10,\n                  marginBottom: 20\n                },\n                children: cont.title\n              }), _jsx(Image, {\n                source: require(\"./../assets/svg/cancel.png\"),\n                style: {\n                  height: 20,\n                  width: 20,\n                  marginRight: 15\n                }\n              })]\n            }), _jsx(View, {\n              children: cont.cards.map(function (card, cardIdx) {\n                var totalCheckBoxes = 0;\n                var actualCheckedBoxes = 0;\n\n                for (var _iterator = _createForOfIteratorHelperLoose(card.checklist), _step; !(_step = _iterator()).done;) {\n                  var el = _step.value;\n\n                  if (el.done === true) {\n                    totalCheckBoxes++;\n                    actualCheckedBoxes++;\n                  } else {\n                    totalCheckBoxes++;\n                  }\n                }\n\n                return _jsxs(View, {\n                  style: {\n                    backgroundColor: \"white\",\n                    width: \"95%\",\n                    alignSelf: \"center\",\n                    borderRadius: 5,\n                    marginBottom: 5\n                  },\n                  children: [_jsx(Text, {\n                    style: {\n                      marginLeft: 10,\n                      marginTop: 8\n                    },\n                    children: card.cardTitle\n                  }), _jsxs(View, {\n                    style: {\n                      flexDirection: \"row\"\n                    },\n                    children: [_jsx(Image, {\n                      source: require(\"./../assets/svg/check-box.png\"),\n                      style: {\n                        height: 15,\n                        width: 15,\n                        marginLeft: 30\n                      }\n                    }), _jsxs(Text, {\n                      style: {\n                        fontSize: 15,\n                        marginLeft: 15,\n                        marginBottom: 8\n                      },\n                      children: [actualCheckedBoxes, \"/\", totalCheckBoxes]\n                    })]\n                  })]\n                }, cardIdx);\n              })\n            }), _jsx(Pressable, {\n              style: {\n                marginTop: 25,\n                marginBottom: 15\n              },\n              onPress: function onPress() {\n                setAddingCard(!addingCard);\n                newCardAnimation();\n              },\n              children: _jsx(Text, {\n                style: {\n                  marginLeft: 10,\n                  color: \"green\"\n                },\n                children: \"+ Ajouter une carte\"\n              })\n            })]\n          }, idx);\n        }) : null, addingList === false ? _jsx(Pressable, {\n          style: styles.addList,\n          onPress: function onPress() {\n            return setAddingList(true);\n          },\n          children: _jsx(Text, {\n            style: {\n              color: \"green\",\n              fontSize: 25\n            },\n            children: \"Ajouter une liste\"\n          })\n        }) : _jsx(TextInput, {\n          style: styles.addListPlaceholder,\n          placeholder: \"Ajouter une liste\"\n        })]\n      })\n    }), addingCard === true ? _jsx(View, {\n      style: {\n        flex: 1,\n        backgroundColor: \"white\"\n      },\n      children: _jsxs(Animated.View, {\n        style: {\n          opacity: addCardAnim\n        },\n        children: [_jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            paddingTop: 15,\n            height: 60,\n            fontSize: 25\n          },\n          children: [_jsx(TextInput, {\n            placeholder: \"Ajouter nouvelle carte...\",\n            style: {\n              color: \"green\",\n              backgroundColor: \"lightgrey\",\n              borderRadius: 5,\n              height: 45,\n              paddingLeft: 10,\n              width: 200,\n              marginRight: 5\n            }\n          }), _jsx(Pressable, {\n            children: _jsx(Image, {\n              source: require(\"./../assets/svg/cancel.png\"),\n              style: {\n                height: 20,\n                width: 20\n              }\n            })\n          })]\n        }), _jsx(Pressable, {\n          style: {\n            alignSelf: \"center\",\n            marginTop: 10,\n            backgroundColor: \"lightgreen\",\n            width: 100,\n            height: 35,\n            borderRadius: 5,\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          },\n          children: _jsx(Text, {\n            children: \"Ajouter\"\n          })\n        })]\n      })\n    }) : _jsx(View, {\n      style: {\n        backgroundColor: \"white\",\n        flex: 1\n      }\n    }), showOptions === true ? _jsx(OptionScreen, {\n      showOptions: showOptions,\n      setShowOptions: setShowOptions,\n      optionAnim: optionAnim\n    }) : null]\n  });\n};\n\nexport default WorkspaceScreen;\nvar styles = StyleSheet.create({\n  global: {\n    backgroundColor: constants.blue,\n    flex: 1\n  },\n  mainBody: {\n    backgroundColor: \"white\",\n    height: 150\n  },\n  card: {\n    backgroundColor: \"lightgrey\",\n    width: 300,\n    marginLeft: 20,\n    marginRight: 5,\n    marginTop: 15,\n    borderRadius: 5,\n    height: 225\n  },\n  addList: {\n    backgroundColor: \"white\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: 50,\n    marginTop: 15,\n    width: 200,\n    marginRight: 20,\n    borderRadius: 5,\n    borderWidth: 1,\n    borderColor: \"lightgrey\",\n    fontSize: 20\n  },\n  addListPlaceholder: {\n    backgroundColor: \"white\",\n    color: \"green\",\n    paddingLeft: 10,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: 50,\n    marginTop: 15,\n    width: 200,\n    marginRight: 20,\n    borderRadius: 5,\n    borderWidth: 1,\n    borderColor: \"lightgrey\",\n    fontSize: 20\n  },\n  ScrollViewContainer: {\n    height: 275\n  },\n  png: {\n    height: constants.iconsSize,\n    width: constants.iconsSize,\n    tintColor: \"white\",\n    marginLeft: 10,\n    marginRight: 10,\n    alignSelf: \"center\"\n  }\n});","map":{"version":3,"names":["React","useState","useRef","useEffect","SafeAreaView","constants","HeaderScreen","OptionScreen","DB","WorkspaceScreen","navigation","database","setDatabase","addingCard","setAddingCard","addingList","setAddingList","SELECTED","DBcopy","spaces","forEach","el","name","console","log","showOptions","setShowOptions","optionAnim","Animated","Value","current","addCardAnim","optionKickingIn","timing","toValue","duration","useNativeDriver","start","newCardAnimation","styles","global","flexDirection","backgroundColor","blue","height","alignItems","require","png","color","flex","fontSize","marginLeft","alignSelf","ScrollViewContainer","mainBody","containers","map","cont","idx","card","justifyContent","marginTop","marginBottom","title","width","marginRight","cards","cardIdx","totalCheckBoxes","actualCheckedBoxes","checklist","done","borderRadius","cardTitle","addList","addListPlaceholder","opacity","paddingTop","paddingLeft","StyleSheet","create","borderWidth","borderColor","iconsSize","tintColor"],"sources":["C:/Users/mr b/Desktop/trello-clone-native/screens/WorkspaceScreen.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { StyleSheet, Text, View, Image, TextInput, Pressable, Animated, ScrollView } from 'react-native';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport constants from '../constants/constants';\r\nimport HeaderScreen from './HeaderScreen';\r\nimport OptionScreen from './OptionScreen';\r\n\r\nimport DB from './../fakeDB/db';\r\n\r\nconst WorkspaceScreen = ({ navigation }) => {\r\n\r\n    const [database, setDatabase] = useState({});\r\n    const [addingCard, setAddingCard] = useState(false);\r\n    const [addingList, setAddingList] = useState(false);\r\n\r\n    let SELECTED = \"Espace 1\" // to change that shit please !!!\r\n\r\n    useEffect(() => {\r\n        const DBcopy = DB[0];\r\n        DBcopy.spaces.forEach(el => {\r\n            if (el.name === SELECTED) {\r\n                setDatabase(el);\r\n            }\r\n        })\r\n        console.log(database)\r\n    }, [])\r\n\r\n\r\n    const [showOptions, setShowOptions] = useState(false);\r\n\r\n    const optionAnim = useRef(new Animated.Value(0)).current;\r\n    const addCardAnim = useRef(new Animated.Value(0)).current;\r\n\r\n    const optionKickingIn = () => {\r\n        Animated.timing(optionAnim, {\r\n            toValue : 4,\r\n            duration: 555,\r\n            useNativeDriver: false\r\n        }).start();\r\n    }\r\n\r\n    const newCardAnimation = () => {\r\n        Animated.timing(addCardAnim, {\r\n            toValue: 1,\r\n            duration: 333,\r\n            useNativeDriver: false\r\n        }).start();\r\n    }\r\n\r\n    return (\r\n        <SafeAreaView style={styles.global}>\r\n            {\r\n                (addingCard === false && addingList === false) ? \r\n                <HeaderScreen \r\n                title={SELECTED} \r\n                showOptions={showOptions} \r\n                setShowOptions={setShowOptions}\r\n                optionKickingIn={optionKickingIn}/> : null\r\n            }\r\n\r\n            {\r\n                addingCard === true ? \r\n                // Adding card header\r\n                <View style={{\r\n                    flexDirection: 'row',\r\n                    backgroundColor: constants.blue,\r\n                    height: 60,\r\n                    alignItems: 'center',\r\n                }}>\r\n                    <Pressable\r\n                        onPress={() => setAddingCard(false)}\r\n                    >\r\n                        <Image source={require('./../assets/svg/cancel.png')} style={styles.png}/>\r\n                    </Pressable>\r\n\r\n                    <Text style={{\r\n                        color: \"white\",\r\n                        flex: 1,\r\n                        fontSize: 25,\r\n                        marginLeft: 20,\r\n                        alignSelf: \"center\"\r\n                    }}>Ajouter une carte...</Text>\r\n\r\n                    <Pressable>\r\n                    <Image source={require('./../assets/svg/check.png')} style={styles.png}/>\r\n                    </Pressable>\r\n                </View> : null\r\n            }\r\n\r\n            {\r\n                addingList === true ? \r\n                // Adding list header\r\n                <View style={{\r\n                    flexDirection: 'row',\r\n                    backgroundColor: constants.blue,\r\n                    height: 60,\r\n                    alignItems: 'center',\r\n                }}>\r\n                    <Pressable\r\n                        onPress={() => setAddingList(false)}>\r\n                        <Image source={require('./../assets/svg/cancel.png')} style={styles.png}/>\r\n                    </Pressable>\r\n\r\n                    <Text style={{\r\n                        color: \"white\",\r\n                        flex: 1,\r\n                        fontSize: 25,\r\n                        marginLeft: 20,\r\n                        alignSelf: \"center\"\r\n                    }}>Ajouter une liste...</Text>\r\n\r\n                    <Pressable>\r\n                    <Image source={require('./../assets/svg/check.png')} style={styles.png}/>\r\n                    </Pressable>\r\n                </View> : null\r\n            }\r\n            <View style={styles.ScrollViewContainer}>\r\n            <ScrollView style={styles.mainBody} horizontal={true}>\r\n                {\r\n                    database[\"containers\"] ? \r\n                    \r\n                    database.containers.map((cont, idx) => {\r\n                        return(\r\n                            <View style={styles.card} key={idx}>\r\n                                <View style={{flexDirection: \"row\", alignItems: \"center\", justifyContent: \"space-between\"}}>\r\n                                    <Text\r\n                                        style={{\r\n                                            marginLeft: 10,\r\n                                            fontSize: 17,\r\n                                            marginTop: 10,\r\n                                            marginBottom: 20\r\n                                        }}\r\n                                    >{cont.title}</Text>\r\n                                    <Image source={require('./../assets/svg/cancel.png')} style={{height: 20, width: 20, marginRight: 15}}/>\r\n                                </View>\r\n                                \r\n                                <View>\r\n                                    {\r\n                                        cont.cards.map((card, cardIdx) => {\r\n                                            let totalCheckBoxes = 0;\r\n                                            let actualCheckedBoxes = 0;\r\n\r\n                                            for (let el of card.checklist) {\r\n                                                if (el.done === true) {\r\n                                                    totalCheckBoxes ++;\r\n                                                    actualCheckedBoxes ++;\r\n                                                } else {\r\n                                                    totalCheckBoxes ++;\r\n                                                }\r\n                                            }\r\n                                            return(\r\n                                                <View \r\n                                                    key={cardIdx}\r\n                                                    style={{\r\n                                                        backgroundColor: \"white\",\r\n                                                        width: \"95%\",\r\n                                                        alignSelf: \"center\",\r\n                                                        borderRadius: 5,\r\n                                                        marginBottom: 5\r\n                                                    }}>\r\n                                                    <Text style={{marginLeft: 10, marginTop: 8}}>{card.cardTitle}</Text>\r\n                                                    <View style={{\r\n                                                        flexDirection: \"row\"\r\n                                                    }}>\r\n                                                        <Image \r\n                                                            source={require('./../assets/svg/check-box.png')}\r\n                                                            style={{\r\n                                                                height: 15, width: 15, marginLeft: 30\r\n                                                            }}/>\r\n                                                        <Text style={{fontSize: 15, marginLeft: 15, marginBottom: 8}}>{actualCheckedBoxes}/{totalCheckBoxes}</Text>\r\n                                                    </View>\r\n                                                    \r\n                                                </View>\r\n                                                )\r\n                                        })\r\n                                    }\r\n                                </View>\r\n                                <Pressable \r\n                                    style={{\r\n                                        marginTop: 25,\r\n                                        marginBottom: 15\r\n                                    }}\r\n                                    onPress={() => {\r\n                                        setAddingCard(!addingCard)\r\n                                        newCardAnimation();\r\n                                    }}>\r\n                                    <Text style={{\r\n                                        marginLeft: 10,\r\n                                        color: \"green\"\r\n                                    }}>+ Ajouter une carte</Text>\r\n                                </Pressable>\r\n\r\n                            </View>\r\n                            )\r\n                    })\r\n\r\n                    : null\r\n                }\r\n\r\n                {\r\n                    addingList === false ? \r\n\r\n                    <Pressable \r\n                        style={styles.addList}\r\n                        onPress={() => setAddingList(true)}\r\n                        >\r\n                        <Text style={{color: \"green\", fontSize: 25}}>Ajouter une liste</Text>\r\n                    </Pressable> :\r\n\r\n                    <TextInput \r\n                        style={styles.addListPlaceholder}\r\n                        placeholder=\"Ajouter une liste\"\r\n                    />\r\n\r\n\r\n\r\n                }\r\n\r\n                \r\n            </ScrollView>\r\n            </View>\r\n\r\n            {addingCard === true ?\r\n\r\n            <View style={{\r\n                flex: 1,\r\n                backgroundColor: \"white\",\r\n            }}>\r\n                <Animated.View style={{\r\n                    opacity: addCardAnim,\r\n                }}>\r\n                    <View style={{\r\n                        flexDirection: \"row\", \r\n                        justifyContent: \"center\", \r\n                        alignItems: \"center\",\r\n                        paddingTop: 15,\r\n                        height: 60,\r\n                        fontSize: 25,\r\n                        }}>\r\n                        <TextInput \r\n                            placeholder=\"Ajouter nouvelle carte...\"\r\n                            style={{\r\n                                color: \"green\",\r\n                                backgroundColor: \"lightgrey\",\r\n                                borderRadius: 5,\r\n                                height: 45,\r\n                                paddingLeft: 10,\r\n                                width: 200,\r\n                                marginRight: 5,\r\n                            }}\r\n                        />\r\n                        <Pressable>\r\n                            <Image \r\n                                source={require('./../assets/svg/cancel.png')} \r\n                                style={{height: 20, width: 20}}/>\r\n                        </Pressable>\r\n                    </View>\r\n                    \r\n                    <Pressable style={{\r\n                        alignSelf: \"center\",\r\n                        marginTop: 10,\r\n                        backgroundColor: \"lightgreen\",\r\n                        width: 100,\r\n                        height: 35,\r\n                        borderRadius: 5,\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\"\r\n                    }}>\r\n                        <Text>Ajouter</Text>\r\n                    </Pressable>\r\n                </Animated.View>\r\n            </View>\r\n            \r\n            \r\n\r\n            : \r\n            \r\n            <View style={{backgroundColor: \"white\", flex:1}}></View>}\r\n\r\n\r\n\r\n            { showOptions === true ? \r\n                <OptionScreen \r\n                    showOptions={showOptions} \r\n                    setShowOptions={setShowOptions}\r\n                    optionAnim={optionAnim}\r\n                    /> : null }\r\n            \r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nexport default WorkspaceScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    global: {\r\n        backgroundColor: constants.blue,\r\n        flex: 1,\r\n    },\r\n\r\n    mainBody: {\r\n\r\n        backgroundColor: \"white\",\r\n        height: 150\r\n    },\r\n\r\n    card: {\r\n        backgroundColor: \"lightgrey\",\r\n        width: 300,\r\n        marginLeft: 20,\r\n        marginRight: 5,\r\n        marginTop: 15,\r\n        borderRadius: 5,\r\n        height: 225\r\n    },\r\n\r\n    addList: {\r\n        backgroundColor: \"white\", \r\n        alignItems: \"center\", \r\n        justifyContent: \"center\", \r\n        height: 50, \r\n        marginTop: 15, \r\n        width: 200,\r\n        marginRight: 20,\r\n        borderRadius: 5,\r\n        borderWidth: 1,\r\n        borderColor: \"lightgrey\",\r\n        fontSize: 20\r\n    },\r\n\r\n    addListPlaceholder: {\r\n        backgroundColor: \"white\", \r\n        color: \"green\",\r\n        paddingLeft: 10,\r\n        alignItems: \"center\", \r\n        justifyContent: \"center\", \r\n        height: 50, \r\n        marginTop: 15, \r\n        width: 200,\r\n        marginRight: 20,\r\n        borderRadius: 5,\r\n        borderWidth: 1,\r\n        borderColor: \"lightgrey\",\r\n        fontSize: 20\r\n    },\r\n\r\n    ScrollViewContainer: {\r\n        height: 275\r\n    },\r\n\r\n    png: {\r\n        height: constants.iconsSize,\r\n        width: constants.iconsSize,\r\n        tintColor: \"white\",\r\n        marginLeft: 10,\r\n        marginRight: 10,\r\n        alignSelf: \"center\"\r\n    },\r\n})\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}