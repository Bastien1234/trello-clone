{"ast":null,"code":"import React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LogScreen = function LogScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(SafeAreaView, {\n    style: styles.global,\n    children: [_jsx(Image, {\n      source: require(\"./../assets/images/logScreenImage.png\"),\n      style: styles.image\n    }), _jsxs(View, {\n      style: styles.bottomPart,\n      children: [_jsx(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Email Adress\",\n        secureTextEntry: false\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Password\",\n        secureTextEntry: true\n      }), _jsxs(View, {\n        style: styles.toggleLine,\n        children: [_jsx(View, {\n          style: styles.toggle,\n          children: _jsx(ToggleSwitch, {\n            isOn: toggleSwitchPassword,\n            onColor: \"rgb(173, 26, 26)\",\n            offColor: \"grey\",\n            size: \"small\",\n            onToggle: function onToggle() {\n              return setToggleSwitchPassword(!toggleSwitchPassword);\n            }\n          })\n        }), _jsx(Text, {\n          style: styles.toggleText,\n          children: \"Remember my password\"\n        })]\n      }), _jsxs(View, {\n        style: styles.toggleLine,\n        children: [_jsx(View, {\n          style: styles.toggle,\n          children: _jsx(ToggleSwitch, {\n            isOn: toggleSwitchBiometry,\n            onColor: \"rgb(173, 26, 26)\",\n            offColor: \"grey\",\n            size: \"small\",\n            onToggle: function onToggle() {\n              return setToggleSwitchBiometry(!toggleSwitchBiometry);\n            }\n          })\n        }), _jsx(Text, {\n          style: styles.toggleText,\n          children: \"Activate biometry\"\n        })]\n      }), _jsx(Pressable, {\n        style: styles.loginButton,\n        children: _jsx(Text, {\n          style: styles.loginButtontext,\n          children: \"LOGIN\"\n        })\n      }), _jsx(Pressable, {\n        style: styles.registerButton,\n        onPress: function onPress() {\n          navigation.navigate(\"Register\");\n        },\n        children: _jsx(Text, {\n          style: styles.registerButtonText,\n          children: \"REGISTER\"\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.footer,\n      children: [_jsx(Text, {\n        style: styles.footerText,\n        children: \"No game under 18\"\n      }), _jsx(Text, {\n        style: styles.footerText,\n        children: \"Forgot password ?\"\n      })]\n    })]\n  });\n};\n\nexport default LogScreen;\nvar styles = StyleSheet.create({\n  global: {\n    backgroundColor: \"rgb(235, 235, 235)\",\n    flex: 1\n  },\n  bottomPart: {\n    flex: 1,\n    justifyContent: \"space-between\",\n    marginTop: 20\n  },\n  image: {\n    height: 275,\n    width: \"100%\"\n  },\n  textInput: {\n    alignSelf: \"center\",\n    width: \"75%\",\n    fontSize: 17,\n    color: \"black\",\n    borderBottomWidth: 1,\n    borderBottomColor: \"grey\",\n    height: 50,\n    textAlign: \"center\"\n  },\n  toggleLine: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    width: \"75%\",\n    alignSelf: \"center\",\n    height: 30\n  },\n  toggle: {\n    marginRight: 15\n  },\n  toggleText: {\n    fontSize: 17\n  },\n  loginButton: {\n    backgroundColor: \"rgb(173, 26, 26)\",\n    width: 175,\n    height: 40,\n    borderRadius: 3,\n    overflow: \"hidden\",\n    alignSelf: \"center\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  loginButtontext: {\n    fontSize: 20,\n    color: \"white\"\n  },\n  registerButton: {\n    alignSelf: \"center\"\n  },\n  registerButtonText: {\n    fontSize: 20,\n    textDecorationLine: \"underline\",\n    textDecorationStyle: \"solid\",\n    textDecorationColor: \"black\"\n  },\n  footer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    height: 40,\n    alignItems: \"flex-end\"\n  },\n  footerText: {\n    fontSize: 12,\n    marginLeft: 10,\n    marginRight: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/mr b/Desktop/trello-clone/screens/LogScreen.js"],"names":["React","useState","SafeAreaView","LogScreen","navigation","styles","global","require","image","bottomPart","textInput","toggleLine","toggle","toggleSwitchPassword","setToggleSwitchPassword","toggleText","toggleSwitchBiometry","setToggleSwitchBiometry","loginButton","loginButtontext","registerButton","navigate","registerButtonText","footer","footerText","StyleSheet","create","backgroundColor","flex","justifyContent","marginTop","height","width","alignSelf","fontSize","color","borderBottomWidth","borderBottomColor","textAlign","flexDirection","alignItems","marginRight","borderRadius","overflow","textDecorationLine","textDecorationStyle","textDecorationColor","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, Text, View, Image, TextInput, Pressable } from 'react-native';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\n\r\nconst LogScreen = ({ navigation }) => {\r\n\r\n    return (\r\n        <SafeAreaView style={styles.global}>\r\n            <Image source={require('./../assets/images/logScreenImage.png')} style={styles.image}/>\r\n            {/* All elements beneath photo */}\r\n            <View style={styles.bottomPart}>\r\n                <TextInput \r\n                    style={styles.textInput} \r\n                    placeholder=\"Email Adress\"\r\n                    secureTextEntry={false}\r\n                    // onChangeText={text => {\r\n                    //     setNewTeamData(previousData => {\r\n                    //         return { ...previousData, firstName: text}})}} \r\n                    />\r\n\r\n                <TextInput \r\n                    style={styles.textInput} \r\n                    placeholder=\"Password\"\r\n                    secureTextEntry={true}\r\n                    // onChangeText={text => {\r\n                    //     setNewTeamData(previousData => {\r\n                    //         return { ...previousData, firstName: text}})}} \r\n                    />\r\n\r\n                <View style={styles.toggleLine}>\r\n                    <View style={styles.toggle}>\r\n                    <ToggleSwitch\r\n                        isOn={toggleSwitchPassword}\r\n                        onColor=\"rgb(173, 26, 26)\"\r\n                        offColor=\"grey\"\r\n                        size=\"small\"\r\n                        onToggle={() => setToggleSwitchPassword(!toggleSwitchPassword)}\r\n                        />\r\n                    </View>\r\n                    <Text style={styles.toggleText}>Remember my password</Text>\r\n                </View>\r\n\r\n                <View style={styles.toggleLine}>\r\n                    <View style={styles.toggle}>\r\n                    <ToggleSwitch\r\n                        isOn={toggleSwitchBiometry}\r\n                        onColor=\"rgb(173, 26, 26)\"\r\n                        offColor=\"grey\"\r\n                        size=\"small\"\r\n                        onToggle={() => setToggleSwitchBiometry(!toggleSwitchBiometry)}\r\n                        />\r\n                    </View>\r\n                    <Text style={styles.toggleText}>Activate biometry</Text>\r\n                </View>\r\n\r\n                <Pressable style={styles.loginButton}>\r\n                    <Text style={styles.loginButtontext}>LOGIN</Text>\r\n                </Pressable>\r\n\r\n                <Pressable style={styles.registerButton}\r\n                            onPress={() => {navigation.navigate(\"Register\")}}\r\n                >\r\n                    <Text style={styles.registerButtonText}>REGISTER</Text>\r\n                </Pressable>\r\n            </View>\r\n\r\n            {/* Footer */}\r\n            <View style={styles.footer}>\r\n                <Text style={styles.footerText}>No game under 18</Text>\r\n                <Text style={styles.footerText}>Forgot password ?</Text>\r\n            </View>\r\n            \r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nexport default LogScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    global: {\r\n        backgroundColor: \"rgb(235, 235, 235)\",\r\n        flex: 1\r\n    },\r\n\r\n    bottomPart: {\r\n        flex: 1,\r\n        justifyContent: \"space-between\",\r\n        marginTop: 20\r\n        // backgroundColor: \"blue\"\r\n    },\r\n\r\n    image: {\r\n        height: 275,\r\n        width: \"100%\"\r\n    },\r\n\r\n    textInput: {\r\n        // backgroundColor: \"red\",\r\n        alignSelf: \"center\",\r\n        width: \"75%\",\r\n        fontSize: 17,\r\n        color: \"black\",\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: \"grey\",\r\n        height: 50,\r\n        textAlign: \"center\"\r\n    },\r\n\r\n    toggleLine: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"flex-start\",\r\n        alignItems: \"center\",\r\n        width: \"75%\",\r\n        alignSelf: \"center\",\r\n        height: 30\r\n    },\r\n    toggle: {\r\n        marginRight: 15\r\n    },\r\n\r\n    toggleText: {\r\n        fontSize: 17\r\n    },\r\n\r\n    loginButton: {\r\n        backgroundColor: \"rgb(173, 26, 26)\",\r\n        width: 175,\r\n        height: 40,\r\n        borderRadius: 3,\r\n        overflow: \"hidden\",\r\n        alignSelf: \"center\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n\r\n    loginButtontext: {\r\n        fontSize: 20,\r\n        color: \"white\"\r\n    },\r\n\r\n    registerButton: {\r\n        alignSelf: \"center\"\r\n    },\r\n\r\n    registerButtonText: {\r\n        fontSize: 20,\r\n        textDecorationLine: \"underline\",\r\n        textDecorationStyle: \"solid\",\r\n        textDecorationColor: \"black\"\r\n    },\r\n\r\n    footer: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        height: 40,\r\n        alignItems: \"flex-end\"\r\n    },\r\n\r\n    footerText: {\r\n        fontSize: 12,\r\n        marginLeft: 10,\r\n        marginRight: 10\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}