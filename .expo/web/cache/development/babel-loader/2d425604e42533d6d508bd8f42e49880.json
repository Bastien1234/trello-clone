{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useRef, useContext, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport constants from \"../constants/constants\";\nimport HeaderScreen from \"./HeaderScreen\";\nimport OptionScreen from \"./OptionScreen\";\nimport axios from 'axios';\nimport DB from \"./../fakeDB/db\";\nimport cancelSvg from \"./../assets/svg/cancel.png\";\nimport { UserContext } from \"./../context/userContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar TableauxScreen = function TableauxScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(UserContext),\n      userContext = _useContext.userContext,\n      setUserContext = _useContext.setUserContext;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      listOfNames = _useState2[0],\n      setListOfNames = _useState2[1];\n\n  useEffect(function () {\n    var spaceList = [];\n    userContext.spaces.forEach(function (el) {\n      spaceList.push(el.name);\n    });\n    setListOfNames(spaceList);\n  }, [userContext]);\n\n  var addSpace = function _callee() {\n    var response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.post(constants.URL + \"/api/v1/users/addWorkspace\", {\n              name: newSpaceName,\n              id: userContext._id\n            }));\n\n          case 3:\n            response = _context.sent;\n            console.log(response);\n\n            if (response.status === 200) {\n              userContext.spaces.push({\n                name: newSpaceName,\n                containers: []\n              });\n              setListOfNames([].concat(_toConsumableArray(listOfNames), [newSpaceName]));\n            }\n\n            setShowNew(false);\n            _context.next = 13;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0.message);\n            setShowNew(false);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  var deleteSpace = function _callee2(spaceName) {\n    var response, newSpaces, spaceList;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(axios.post(constants.URL + \"/api/v1/users/deleteWorkspace\", {\n              spaceName: spaceName,\n              email: userContext.email\n            }));\n\n          case 3:\n            response = _context2.sent;\n            console.log(response);\n\n            if (response.status === 200) {\n              newSpaces = [];\n              userContext.spaces.forEach(function (el) {\n                if (el.name !== spaceName) {\n                  newSpaces.push(el);\n                }\n              });\n              userContext.spaces = newSpaces;\n              spaceList = [];\n              userContext.spaces.forEach(function (el) {\n                spaceList.push(el.name);\n              });\n              setListOfNames([].concat(spaceList));\n            }\n\n            _context2.next = 11;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0.message);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showOptions = _useState4[0],\n      setShowOptions = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showNew = _useState6[0],\n      setShowNew = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      newSpaceName = _useState8[0],\n      setNewSpaceName = _useState8[1];\n\n  var optionAnim = useRef(new Animated.Value(0)).current;\n\n  var optionKickingIn = function optionKickingIn() {\n    Animated.timing(optionAnim, {\n      toValue: 4,\n      duration: 1000,\n      useNativeDriver: false\n    }).start();\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: styles.global,\n    children: [_jsx(HeaderScreen, {\n      title: \"Tableaux\",\n      showOptions: showOptions,\n      setShowOptions: setShowOptions,\n      optionKickingIn: optionKickingIn\n    }), _jsxs(ScrollView, {\n      style: styles.mainBody,\n      children: [_jsx(Text, {\n        style: styles.subTitle,\n        children: \"Espace de travail Trello\"\n      }), listOfNames.map(function (el, idx) {\n        return _jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            width: \"100%\"\n          },\n          children: [_jsxs(Pressable, {\n            onPress: function onPress() {\n              navigation.navigate('Workspace', {\n                selectedSpace: el\n              });\n            },\n            style: styles.workspace,\n            children: [_jsx(Image, {\n              style: styles.workspaceImage,\n              source: require(\"./../assets/images/motocross.jpg\")\n            }), _jsx(Text, {\n              style: styles.workspaceText,\n              children: el\n            })]\n          }, idx), _jsx(Pressable, {\n            onPress: function onPress() {\n              deleteSpace(el);\n            },\n            style: styles.cross,\n            children: _jsx(Image, {\n              source: cancelSvg,\n              style: styles.crossSvg\n            })\n          })]\n        }, idx);\n      }), showNew === true ? _jsxs(View, {\n        style: styles.addGlobal,\n        children: [_jsx(Text, {\n          style: styles.subTitle,\n          children: \"Ajouter un espace de travail\"\n        }), _jsx(TextInput, {\n          placeholder: \"Nouvel espace\",\n          value: newSpaceName,\n          onChangeText: function onChangeText(t) {\n            setNewSpaceName(t);\n            console.log(newSpaceName);\n          },\n          style: {\n            height: 40,\n            width: \"90%\",\n            alignSelf: \"center\",\n            paddingLeft: 15,\n            borderWidth: 1,\n            borderRadius: 5\n          }\n        }), _jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          },\n          children: [_jsx(Pressable, {\n            style: styles.btn,\n            onPress: function onPress() {\n              return addSpace();\n            },\n            children: _jsx(Text, {\n              style: styles.btnText,\n              children: \"Ajouter\"\n            })\n          }), _jsx(Pressable, {\n            style: styles.btn,\n            onPress: function onPress() {\n              setShowNew(false);\n            },\n            children: _jsx(Text, {\n              style: styles.btnText,\n              children: \"Annuler\"\n            })\n          })]\n        })]\n      }) : null]\n    }), showNew === false ? _jsx(View, {\n      style: {\n        position: \"absolute\",\n        bottom: 25,\n        right: 25,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: _jsx(Pressable, {\n        style: {\n          width: 85,\n          height: 85,\n          borderRadius: 500,\n          backgroundColor: \"lightgreen\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        onPress: function onPress() {\n          setShowNew(true);\n        },\n        children: _jsx(Text, {\n          style: {\n            fontSize: 50,\n            color: \"white\"\n          },\n          children: \"+\"\n        })\n      })\n    }) : null, showOptions === true ? _jsx(OptionScreen, {\n      showOptions: showOptions,\n      setShowOptions: setShowOptions,\n      optionAnim: optionAnim\n    }) : null]\n  });\n};\n\nexport default TableauxScreen;\nvar styles = StyleSheet.create({\n  global: {\n    backgroundColor: constants.blue,\n    flex: 1\n  },\n  mainBody: {\n    flex: 1,\n    backgroundColor: \"white\"\n  },\n  subTitle: {\n    fontSize: 16,\n    marginTop: 12,\n    marginBottom: 12,\n    marginLeft: 15\n  },\n  workspace: {\n    flexDirection: \"row\",\n    flex: 1,\n    backgroundColor: \"lightgrey\",\n    marginBottom: 10,\n    height: 65,\n    alignItems: \"center\",\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderTopColor: \"grey\",\n    borderBottomColor: \"grey\"\n  },\n  workspaceImage: {\n    height: 50,\n    width: 50,\n    marginLeft: 15,\n    borderRadius: 5\n  },\n  workspaceText: {\n    marginLeft: 15,\n    fontSize: 20\n  },\n  cross: {\n    backgroundColor: \"lightgrey\",\n    marginBottom: 10,\n    height: 65,\n    alignItems: \"center\",\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderTopColor: \"grey\",\n    borderBottomColor: \"grey\",\n    justifyContent: \"center\",\n    paddingRight: 15\n  },\n  crossSvg: {\n    height: 25,\n    width: 25\n  },\n  addGlobal: {},\n  btn: {\n    height: 50,\n    width: 100,\n    marginRight: 5,\n    marginLeft: 5,\n    margin: 10,\n    backgroundColor: \"lightgrey\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 5,\n    paddingLeft: 5,\n    paddingRight: 5\n  },\n  btnText: {\n    fontSize: 15\n  }\n});","map":{"version":3,"sources":["C:/Users/mr b/Desktop/trello-clone-native/screens/TableauxScreen.js"],"names":["React","useState","useRef","useContext","useEffect","SafeAreaView","constants","HeaderScreen","OptionScreen","axios","DB","cancelSvg","UserContext","TableauxScreen","navigation","userContext","setUserContext","listOfNames","setListOfNames","spaceList","spaces","forEach","el","push","name","addSpace","post","URL","newSpaceName","id","_id","response","console","log","status","containers","setShowNew","message","deleteSpace","spaceName","email","newSpaces","showOptions","setShowOptions","showNew","setNewSpaceName","optionAnim","Animated","Value","current","optionKickingIn","timing","toValue","duration","useNativeDriver","start","styles","global","mainBody","subTitle","map","idx","flexDirection","width","navigate","selectedSpace","workspace","workspaceImage","require","workspaceText","cross","crossSvg","addGlobal","t","height","alignSelf","paddingLeft","borderWidth","borderRadius","alignItems","justifyContent","btn","btnText","position","bottom","right","backgroundColor","fontSize","color","StyleSheet","create","blue","flex","marginTop","marginBottom","marginLeft","borderTopWidth","borderBottomWidth","borderTopColor","borderBottomColor","paddingRight","marginRight","margin"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useContext, useEffect } from 'react';\r\nimport { StyleSheet, Text, View, Image, TextInput, Pressable, Animated, ScrollView } from 'react-native';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport constants from '../constants/constants';\r\nimport HeaderScreen from './HeaderScreen';\r\nimport OptionScreen from './OptionScreen';\r\nimport axios from 'axios';\r\n\r\nimport DB from './../fakeDB/db';        \r\n\r\nimport cancelSvg from './../assets/svg/cancel.png';\r\n\r\nimport { UserContext } from './../context/userContext';\r\n\r\nconst TableauxScreen = ({ navigation }) => {\r\n\r\n    const { userContext, setUserContext } = useContext(UserContext);\r\n    const [listOfNames, setListOfNames] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const spaceList = [];\r\n        userContext.spaces.forEach(el => {\r\n            spaceList.push(el.name)\r\n        });\r\n\r\n        setListOfNames(spaceList);\r\n    }, [userContext])\r\n\r\n    \r\n    const addSpace = async () => {\r\n        try {\r\n            const response = await axios.post(constants.URL+\"/api/v1/users/addWorkspace\", {\r\n                name: newSpaceName,\r\n                id: userContext._id\r\n            })\r\n\r\n            console.log(response)\r\n\r\n            if (response.status === 200) {\r\n                userContext.spaces.push({\r\n                    name: newSpaceName,\r\n                    containers: []\r\n                })\r\n\r\n                setListOfNames([...listOfNames, newSpaceName])\r\n            }\r\n            setShowNew(false);\r\n        } catch (e) {\r\n            console.log(e.message);\r\n            setShowNew(false);\r\n        }\r\n    }\r\n\r\n    const deleteSpace = async (spaceName) => {\r\n        try {\r\n            const response = await axios.post(constants.URL+\"/api/v1/users/deleteWorkspace\", {\r\n                spaceName,\r\n                email: userContext.email\r\n            })\r\n\r\n            console.log(response)\r\n\r\n            if (response.status === 200) {\r\n                let newSpaces = [];\r\n                userContext.spaces.forEach(el => {\r\n                    if (el.name !== spaceName) {\r\n                        newSpaces.push(el);\r\n                    }\r\n                })\r\n\r\n                userContext.spaces = newSpaces;\r\n\r\n                const spaceList = [];\r\n                userContext.spaces.forEach(el => {\r\n                    spaceList.push(el.name)\r\n                });\r\n\r\n\r\n\r\n                setListOfNames([...spaceList]);\r\n            }\r\n        } catch (e) {\r\n            console.log(e.message)\r\n        }\r\n    }\r\n\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [showNew, setShowNew] = useState(false);\r\n    const [newSpaceName, setNewSpaceName] = useState(\"\");\r\n\r\n\r\n    const optionAnim = useRef(new Animated.Value(0)).current;\r\n\r\n    const optionKickingIn = () => {\r\n        Animated.timing(optionAnim, {\r\n            toValue : 4,\r\n            duration: 1000,\r\n            useNativeDriver: false\r\n        }).start();\r\n    }\r\n\r\n    return (\r\n        <SafeAreaView style={styles.global}>\r\n            <HeaderScreen \r\n                title={\"Tableaux\"} \r\n                showOptions={showOptions} \r\n                setShowOptions={setShowOptions}\r\n                optionKickingIn={optionKickingIn}/>\r\n            <ScrollView style={styles.mainBody}>\r\n                <Text style={styles.subTitle}>Espace de travail Trello</Text>\r\n                {\r\n                    // Populate from DB\r\n\r\n                    listOfNames.map((el, idx) => {\r\n                        return(\r\n                                <View style={{\r\n                                    flexDirection: \"row\",\r\n                                    width: \"100%\"\r\n                                }}\r\n                                key={idx}>\r\n                                    <Pressable \r\n                                        onPress={() => {\r\n                                            navigation.navigate('Workspace', {\r\n                                                selectedSpace: el\r\n                                            })\r\n                                        }}\r\n                                        style={styles.workspace} \r\n                                        key={idx}>\r\n                                        <Image \r\n                                            style={styles.workspaceImage}\r\n                                            source={require(\"./../assets/images/motocross.jpg\")} />\r\n                                        <Text style={styles.workspaceText}>{el}</Text>\r\n                                    </Pressable>\r\n                                    <Pressable \r\n                                        onPress={() => {\r\n                                            deleteSpace(el);\r\n                                        }}\r\n                                        style={styles.cross}>\r\n                                        <Image source={cancelSvg} style={styles.crossSvg}/>\r\n                                    </Pressable>\r\n                                </View>\r\n                            )\r\n                    })\r\n                }\r\n\r\n                {\r\n                showNew === true ?\r\n\r\n                <View style={styles.addGlobal}>\r\n                    <Text style={styles.subTitle}>Ajouter un espace de travail</Text>\r\n                    <TextInput \r\n                        placeholder=\"Nouvel espace\"\r\n                        value={newSpaceName}\r\n                        onChangeText={t => {\r\n                            setNewSpaceName(t)\r\n                            console.log(newSpaceName)\r\n                        }}\r\n                        style={{\r\n                            height: 40,\r\n                            width: \"90%\",\r\n                            alignSelf: \"center\",\r\n                            paddingLeft: 15,\r\n                            borderWidth: 1,\r\n                            borderRadius: 5,\r\n                        }}/>\r\n                    <View style={{\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\"\r\n                    }}>\r\n                        <Pressable \r\n                            style={styles.btn}\r\n                            onPress={() => addSpace()}>\r\n                            <Text style={styles.btnText}>Ajouter</Text>\r\n                        </Pressable>\r\n                        <Pressable \r\n                            style={styles.btn}\r\n                            onPress={() => {setShowNew(false)}}>\r\n                            <Text style={styles.btnText}>Annuler</Text>\r\n                        </Pressable>\r\n                    </View>\r\n                </View> : null\r\n            }\r\n            </ScrollView>\r\n\r\n            \r\n            \r\n            {\r\n\r\n                showNew === false ?\r\n                <View style={{\r\n                    position: \"absolute\",\r\n                    bottom: 25,\r\n                    right: 25,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\"\r\n                }}>\r\n                    <Pressable style={{\r\n                        width: 85,\r\n                        height: 85,\r\n                        borderRadius: 500,\r\n                        backgroundColor: \"lightgreen\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\"\r\n                    }}\r\n                        onPress={() => {setShowNew(true)}}>\r\n                        <Text style ={{\r\n                            fontSize: 50,\r\n                            color: \"white\",\r\n                            \r\n                        }}>+</Text>\r\n                    </Pressable>\r\n                    \r\n                </View> : null\r\n            }\r\n\r\n            { showOptions === true ? \r\n                <OptionScreen \r\n                    showOptions={showOptions} \r\n                    setShowOptions={setShowOptions}\r\n                    optionAnim={optionAnim}\r\n                    /> : null }\r\n            \r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nexport default TableauxScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    global: {\r\n        backgroundColor: constants.blue,\r\n        flex: 1\r\n    },\r\n\r\n    mainBody: {\r\n        flex: 1,\r\n        backgroundColor: \"white\"\r\n    },\r\n\r\n    subTitle: {\r\n        fontSize: 16,\r\n        marginTop: 12,\r\n        marginBottom: 12,\r\n        marginLeft: 15\r\n    },\r\n\r\n    workspace: {\r\n        flexDirection: \"row\",\r\n        flex: 1,\r\n        backgroundColor: \"lightgrey\",\r\n        marginBottom: 10,\r\n        height: 65,\r\n        alignItems: \"center\",\r\n        borderTopWidth: 1,\r\n        borderBottomWidth: 1,\r\n        borderTopColor: \"grey\",\r\n        borderBottomColor: \"grey\",\r\n    },\r\n\r\n    workspaceImage: {\r\n        height: 50,\r\n        width: 50,\r\n        marginLeft: 15,\r\n        borderRadius: 5\r\n    },\r\n\r\n    workspaceText: {\r\n        marginLeft: 15,\r\n        fontSize: 20\r\n    },\r\n\r\n    cross: {\r\n        backgroundColor: \"lightgrey\",\r\n        marginBottom: 10,\r\n        height: 65,\r\n        alignItems: \"center\",\r\n        borderTopWidth: 1,\r\n        borderBottomWidth: 1,\r\n        borderTopColor: \"grey\",\r\n        borderBottomColor: \"grey\",\r\n        justifyContent: \"center\",\r\n        paddingRight: 15\r\n    },\r\n\r\n    crossSvg: {\r\n        height: 25,\r\n        width: 25,\r\n    },  \r\n\r\n    addGlobal: {\r\n\r\n    },\r\n\r\n    btn: {\r\n        height: 50,\r\n        width: 100,\r\n        marginRight: 5,\r\n        marginLeft: 5,\r\n        margin: 10,\r\n        backgroundColor: \"lightgrey\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        borderRadius: 5,\r\n        paddingLeft: 5,\r\n        paddingRight: 5\r\n    },\r\n\r\n    btnText: {\r\n        fontSize: 15,\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}