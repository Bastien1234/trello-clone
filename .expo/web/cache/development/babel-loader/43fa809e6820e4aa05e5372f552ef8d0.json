{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport React, { useRef, useState } from 'react';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport constants from \"../constants/constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ScreenHeight = Dimensions.get(\"window\").height;\n\nvar OptionScreen = function OptionScreen(_ref) {\n  var navigation = _ref.navigation,\n      showOptions = _ref.showOptions,\n      setShowOptions = _ref.setShowOptions,\n      optionAnim = _ref.optionAnim;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isPress = _React$useState2[0],\n      setIsPress = _React$useState2[1];\n\n  var menuArray = [[\"Tableaux\", \"./../assets/svg/tableaux.png\"]];\n  var touchProps = {\n    activeOpacity: 1,\n    underlayColor: 'lightgrey',\n    style: styles.btnNormal,\n    onPress: function onPress() {\n      return console.log('hello');\n    }\n  };\n  return _jsxs(SafeAreaView, {\n    style: styles.global,\n    children: [_jsxs(Animated.View, {\n      style: _objectSpread({\n        flex: optionAnim\n      }, styles.left),\n      children: [_jsxs(View, {\n        style: styles.upperView,\n        children: [_jsx(View, {\n          style: styles.round,\n          children: _jsx(Text, {\n            style: styles.roundText,\n            children: \"BC\"\n          })\n        }), _jsx(Text, {\n          style: styles.textTop,\n          children: \"Bastien Clementi\"\n        }), _jsx(Text, {\n          style: styles.textTop,\n          children: \"@bastienclementi\"\n        }), _jsx(Text, {\n          style: styles.textTop,\n          children: \"bastien.clementi@gmail.com\"\n        })]\n      }), _jsxs(View, {\n        style: styles.bottomView,\n        children: [_jsx(TouchableHighlight, _objectSpread(_objectSpread({}, touchProps), {}, {\n          children: _jsxs(View, {\n            style: {\n              flexDirection: \"row\"\n            },\n            children: [_jsx(Image, {\n              style: styles.bottomViewImage,\n              source: require(\"./../assets/svg/tableaux.png\")\n            }), _jsx(Text, {\n              style: styles.bottomViewText,\n              children: \"Tableaux\"\n            })]\n          })\n        })), _jsx(TouchableHighlight, _objectSpread(_objectSpread({}, touchProps), {}, {\n          children: _jsxs(View, {\n            style: {\n              flexDirection: \"row\"\n            },\n            children: [_jsx(Image, {\n              style: styles.bottomViewImage,\n              source: require(\"./../assets/svg/accueil.png\")\n            }), _jsx(Text, {\n              style: styles.bottomViewText,\n              children: \"Accueil\"\n            })]\n          })\n        })), _jsx(TouchableHighlight, _objectSpread(_objectSpread({}, touchProps), {}, {\n          children: _jsxs(View, {\n            style: {\n              flexDirection: \"row\"\n            },\n            children: [_jsx(Image, {\n              style: styles.bottomViewImage,\n              source: require(\"./../assets/svg/people.png\")\n            }), _jsx(Text, {\n              style: styles.bottomViewText,\n              children: \"Espace de travail Trello\"\n            })]\n          })\n        })), _jsx(TouchableHighlight, _objectSpread(_objectSpread({}, touchProps), {}, {\n          children: _jsxs(View, {\n            style: {\n              flexDirection: \"row\"\n            },\n            children: [_jsx(Image, {\n              style: styles.bottomViewImage,\n              source: require(\"./../assets/svg/card.png\")\n            }), _jsx(Text, {\n              style: styles.bottomViewText,\n              children: \"Mes cartes\"\n            })]\n          })\n        })), _jsx(TouchableHighlight, _objectSpread(_objectSpread({}, touchProps), {}, {\n          children: _jsxs(View, {\n            style: {\n              flexDirection: \"row\"\n            },\n            children: [_jsx(Image, {\n              style: styles.bottomViewImage,\n              source: require(\"./../assets/svg/settings.png\")\n            }), _jsx(Text, {\n              style: styles.bottomViewText,\n              children: \"Param\\xE8tres\"\n            })]\n          })\n        })), _jsx(TouchableHighlight, _objectSpread(_objectSpread({}, touchProps), {}, {\n          children: _jsxs(View, {\n            style: {\n              flexDirection: \"row\"\n            },\n            children: [_jsx(Image, {\n              style: styles.bottomViewImage,\n              source: require(\"./../assets/svg/help.png\")\n            }), _jsx(Text, {\n              style: styles.bottomViewText,\n              children: \"Au secours !\"\n            })]\n          })\n        }))]\n      })]\n    }), _jsx(View, {\n      style: styles.right,\n      children: _jsx(Pressable, {\n        style: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        onPress: function onPress() {\n          setShowOptions(false);\n        }\n      })\n    })]\n  });\n};\n\nexport default OptionScreen;\nvar styles = StyleSheet.create({\n  global: {\n    flexDirection: \"row\",\n    position: \"absolute\",\n    width: \"100%\",\n    height: ScreenHeight\n  },\n  left: {\n    backgroundColor: \"white\"\n  },\n  right: {\n    flex: 1,\n    backgroundColor: \"black\",\n    opacity: 0.7\n  },\n  upperView: {\n    backgroundColor: constants.blue,\n    paddingBottom: 20\n  },\n  round: {\n    backgroundColor: \"darkblue\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: 80,\n    height: 80,\n    borderRadius: 40,\n    marginTop: 15,\n    marginBottom: 10,\n    marginLeft: 15,\n    borderWidth: 1,\n    borderColor: \"black\"\n  },\n  roundText: {\n    fontSize: 45,\n    color: \"white\"\n  },\n  textTop: {\n    color: \"white\",\n    fontSize: 17,\n    marginTop: 2,\n    marginBottom: 2,\n    marginLeft: 15\n  },\n  bottomView: {},\n  btnNormal: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    height: 55,\n    backgroundColor: \"white\"\n  },\n  btnPress: {\n    flexDirection: \"row\",\n    height: 30,\n    marginTop: 15,\n    backgroundColor: \"white\"\n  },\n  bottomViewImage: {\n    height: 20,\n    width: 20,\n    tintColor: \"black\",\n    marginLeft: 15,\n    alignSelf: \"center\"\n  },\n  bottomViewText: {\n    color: \"black\",\n    marginLeft: 30,\n    alignSelf: \"center\",\n    fontSize: 15\n  }\n});","map":{"version":3,"sources":["/Users/bastien/Desktop/trello-clone-native/screens/OptionScreen.js"],"names":["React","useRef","useState","SafeAreaView","constants","ScreenHeight","Dimensions","get","height","OptionScreen","navigation","showOptions","setShowOptions","optionAnim","isPress","setIsPress","menuArray","touchProps","activeOpacity","underlayColor","style","styles","btnNormal","onPress","console","log","global","flex","left","upperView","round","roundText","textTop","bottomView","flexDirection","bottomViewImage","require","bottomViewText","right","width","StyleSheet","create","position","backgroundColor","opacity","blue","paddingBottom","justifyContent","alignItems","borderRadius","marginTop","marginBottom","marginLeft","borderWidth","borderColor","fontSize","color","btnPress","tintColor","alignSelf"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View, Pressable, Image, Animated, Dimensions, TouchableHighlight } from 'react-native';\nimport React, { useRef, useState } from 'react';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport constants from '../constants/constants';\n\nlet ScreenHeight = Dimensions.get(\"window\").height;\n\nconst OptionScreen = ({ navigation, showOptions, setShowOptions, optionAnim }) => {\n\n    const [isPress, setIsPress] = React.useState(false);\n\n    const menuArray = [\n        [\"Tableaux\", \"./../assets/svg/tableaux.png\"],\n        // [\"Accueil\", \"acceuil.png\"],\n        // [\"Espace de travail trello\", \"people.png\"],\n        // [\"Mes cartes\", \"card.png\"],\n        // [\"Paramètres\", \"settings.png\"],\n        // [\"Au secours !\", \"help.png\"]\n    ]\n\n    const touchProps = {\n        activeOpacity: 1,\n        underlayColor: 'lightgrey',\n        style: styles.btnNormal,\n        // onHideUnderlay: () => setIsPress(false),\n        // onShowUnderlay: () => setIsPress(true),\n        onPress: () => console.log('hello'),\n      };\n    \n\n    \n  return (\n    <SafeAreaView style={styles.global}>\n      <Animated.View style={{flex: optionAnim, ...styles.left}}>\n\n          {/* Upper view */}\n          <View style={styles.upperView}>\n              <View style={styles.round}>\n                  <Text style={styles.roundText}>BC</Text>\n              </View>\n              <Text style={styles.textTop}>Bastien Clementi</Text>\n              <Text style={styles.textTop}>@bastienclementi</Text>\n              <Text style={styles.textTop}>bastien.clementi@gmail.com</Text>\n          </View>\n\n          {/* Bottom view */}\n          <View style={styles.bottomView}>\n                <TouchableHighlight {...touchProps}>\n                    <View style={{flexDirection: \"row\"}}>\n                        <Image  \n                            style={styles.bottomViewImage}\n                            source={require(\"./../assets/svg/tableaux.png\")}/>\n                        <Text style={styles.bottomViewText}>Tableaux</Text>\n                    </View>\n                </TouchableHighlight>\n\n                <TouchableHighlight {...touchProps}>\n                    <View style={{flexDirection: \"row\"}}>\n                        <Image  \n                            style={styles.bottomViewImage}\n                            source={require(\"./../assets/svg/accueil.png\")}/>\n                        <Text style={styles.bottomViewText}>Accueil</Text>\n                    </View>\n                </TouchableHighlight>\n\n                <TouchableHighlight {...touchProps}>\n                    <View style={{flexDirection: \"row\"}}>\n                        <Image  \n                            style={styles.bottomViewImage}\n                            source={require(\"./../assets/svg/people.png\")}/>\n                        <Text style={styles.bottomViewText}>Espace de travail Trello</Text>\n                    </View>\n                </TouchableHighlight>\n\n                <TouchableHighlight {...touchProps}>\n                    <View style={{flexDirection: \"row\"}}>\n                        <Image  \n                            style={styles.bottomViewImage}\n                            source={require(\"./../assets/svg/card.png\")}/>\n                        <Text style={styles.bottomViewText}>Mes cartes</Text>\n                    </View>\n                </TouchableHighlight>\n\n                <TouchableHighlight {...touchProps}>\n                    <View style={{flexDirection: \"row\"}}>\n                        <Image  \n                            style={styles.bottomViewImage}\n                            source={require(\"./../assets/svg/settings.png\")}/>\n                        <Text style={styles.bottomViewText}>Paramètres</Text>\n                    </View>\n                </TouchableHighlight>\n\n                <TouchableHighlight {...touchProps}>\n                    <View style={{flexDirection: \"row\"}}>\n                        <Image  \n                            style={styles.bottomViewImage}\n                            source={require(\"./../assets/svg/help.png\")}/>\n                        <Text style={styles.bottomViewText}>Au secours !</Text>\n                    </View>\n                </TouchableHighlight>\n          </View>\n      </Animated.View>\n    \n       \n        <View  style={styles.right}>\n            <Pressable \n                style={{width:\"100%\", height: \"100%\"}}\n            onPress={() => {\n            setShowOptions(false)}}>\n            </Pressable>\n        </View>\n        \n      \n    </SafeAreaView>\n  )\n}\n\nexport default OptionScreen\n\nconst styles = StyleSheet.create({\n    global: {\n        flexDirection: \"row\",\n        position: \"absolute\",\n        width: \"100%\",\n        height: ScreenHeight\n    },\n\n    left: {\n        backgroundColor: \"white\",\n    },\n\n    right: {\n        flex: 1,\n        backgroundColor: \"black\",\n        opacity: 0.7\n    },\n\n    upperView: {\n        backgroundColor: constants.blue,\n        paddingBottom: 20\n    },\n\n    round: {\n        backgroundColor: \"darkblue\",\n        justifyContent: \"center\",\n        alignItems: \"center\", \n        width: 80,\n        height: 80,\n        borderRadius: 40,\n        marginTop: 15,\n        marginBottom: 10,\n        marginLeft: 15,\n        borderWidth: 1,\n        borderColor: \"black\"\n\n    },\n\n    roundText: {\n        fontSize: 45,\n        color: \"white\"\n    },\n\n    textTop: {\n        color: \"white\",\n        fontSize: 17,\n        marginTop: 2,\n        marginBottom: 2,\n        marginLeft: 15,\n    },\n\n    bottomView: {\n\n    },\n\n    btnNormal: {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        height: 55,\n        // marginTop: 15,\n        // marginBottom: 7,\n        // borderBottomColor : \"grey\",\n        // borderBottomWidth: 1,\n        backgroundColor: \"white\"\n\n    },\n\n    btnPress: {\n        flexDirection: \"row\",\n        height: 30,\n        marginTop: 15,\n        // marginBottom: 7,\n        // borderBottomColor : \"grey\",\n        // borderBottomWidth: 1,\n        backgroundColor: \"white\"\n    },\n\n    bottomViewImage: {\n        height: 20,\n        width: 20,\n        tintColor: \"black\",\n        marginLeft: 15,\n        alignSelf: \"center\"\n    },\n\n    bottomViewText: {\n        color: \"black\",\n        marginLeft: 30,\n        alignSelf: \"center\",\n        fontSize: 15,\n    }\n})"]},"metadata":{},"sourceType":"module"}