{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport React, { useRef, useState } from 'react';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport constants from \"../constants/constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ScreenHeight = Dimensions.get(\"window\").height;\n\nvar OptionScreen = function OptionScreen(_ref) {\n  var navigation = _ref.navigation,\n      showOptions = _ref.showOptions,\n      setShowOptions = _ref.setShowOptions,\n      optionAnim = _ref.optionAnim;\n  return _jsxs(SafeAreaView, {\n    style: styles.global,\n    children: [_jsx(Animated.View, {\n      style: {\n        backgroundColor: \"red\",\n        flex: optionAnim\n      },\n      children: _jsxs(View, {\n        style: styles.upperView,\n        children: [_jsx(View, {\n          styles: styles.round,\n          children: _jsx(Text, {\n            styles: styles.roundText,\n            children: \"BC\"\n          })\n        }), _jsx(Text, {\n          children: \"Bastien Clementi\"\n        }), _jsx(Text, {\n          children: \"@bastienclementi\"\n        }), _jsx(Text, {\n          children: \"bastien.clementi@gmail.com\"\n        })]\n      })\n    }), _jsx(View, {\n      style: styles.right,\n      children: _jsx(Pressable, {\n        style: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        onPress: function onPress() {\n          setShowOptions(false);\n        }\n      })\n    })]\n  });\n};\n\nexport default OptionScreen;\nvar styles = StyleSheet.create({\n  global: {\n    flexDirection: \"row\",\n    position: \"absolute\",\n    width: \"100%\",\n    height: ScreenHeight\n  },\n  left: {\n    backgroundColor: \"red\",\n    flex: 1\n  },\n  right: {\n    flex: 1,\n    backgroundColor: \"transparent\"\n  },\n  upperView: {\n    backgroundColor: constants.blue\n  },\n  round: {\n    backgroundColor: \"red\",\n    borderRadius: 50\n  },\n  roundText: {\n    fontSize: 25\n  }\n});","map":{"version":3,"sources":["/Users/bastien/Desktop/trello-clone/screens/OptionScreen.js"],"names":["React","useRef","useState","SafeAreaView","constants","ScreenHeight","Dimensions","get","height","OptionScreen","navigation","showOptions","setShowOptions","optionAnim","styles","global","backgroundColor","flex","upperView","round","roundText","right","width","StyleSheet","create","flexDirection","position","left","blue","borderRadius","fontSize"],"mappings":";;;;;;AACA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,YAAT,QAA6B,gCAA7B;AACA,OAAOC,SAAP;;;AAEA,IAAIC,YAAY,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAA5C;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAA6D;AAAA,MAA1DC,UAA0D,QAA1DA,UAA0D;AAAA,MAA9CC,WAA8C,QAA9CA,WAA8C;AAAA,MAAjCC,cAAiC,QAAjCA,cAAiC;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAKhF,SACE,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEC,MAAM,CAACC,MAA5B;AAAA,eACE,KAAC,QAAD,CAAU,IAAV;AAAe,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAC,KAAjB;AAAwBC,QAAAA,IAAI,EAAEJ;AAA9B,OAAtB;AAAA,gBAEI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACI,SAApB;AAAA,mBACI,KAAC,IAAD;AAAM,UAAA,MAAM,EAAEJ,MAAM,CAACK,KAArB;AAAA,oBACI,KAAC,IAAD;AAAM,YAAA,MAAM,EAAEL,MAAM,CAACM,SAArB;AAAA;AAAA;AADJ,UADJ,EAII,KAAC,IAAD;AAAA;AAAA,UAJJ,EAKI,KAAC,IAAD;AAAA;AAAA,UALJ,EAMI,KAAC,IAAD;AAAA;AAAA,UANJ;AAAA;AAFJ,MADF,EAcI,KAAC,IAAD;AAAO,MAAA,KAAK,EAAEN,MAAM,CAACO,KAArB;AAAA,gBACI,KAAC,SAAD;AACI,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAC,MAAP;AAAed,UAAAA,MAAM,EAAE;AAAvB,SADX;AAEA,QAAA,OAAO,EAAE,mBAAM;AACfI,UAAAA,cAAc,CAAC,KAAD,CAAd;AAAsB;AAHtB;AADJ,MAdJ;AAAA,IADF;AA0BD,CA/BD;;AAiCA,eAAeH,YAAf;AAEA,IAAMK,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC7BT,EAAAA,MAAM,EAAE;AACJU,IAAAA,aAAa,EAAE,KADX;AAEJC,IAAAA,QAAQ,EAAE,UAFN;AAGJJ,IAAAA,KAAK,EAAE,MAHH;AAIJd,IAAAA,MAAM,EAAEH;AAJJ,GADqB;AAQ7BsB,EAAAA,IAAI,EAAE;AACFX,IAAAA,eAAe,EAAE,KADf;AAEFC,IAAAA,IAAI,EAAE;AAFJ,GARuB;AAa7BI,EAAAA,KAAK,EAAE;AACHJ,IAAAA,IAAI,EAAE,CADH;AAEHD,IAAAA,eAAe,EAAE;AAFd,GAbsB;AAkB7BE,EAAAA,SAAS,EAAE;AACPF,IAAAA,eAAe,EAAEZ,SAAS,CAACwB;AADpB,GAlBkB;AAsB7BT,EAAAA,KAAK,EAAE;AACHH,IAAAA,eAAe,EAAE,KADd;AAEHa,IAAAA,YAAY,EAAE;AAFX,GAtBsB;AA2B7BT,EAAAA,SAAS,EAAE;AACPU,IAAAA,QAAQ,EAAE;AADH;AA3BkB,CAAlB,CAAf","sourcesContent":["import { StyleSheet, Text, View, Pressable, Animated, Dimensions } from 'react-native';\nimport React, { useRef, useState } from 'react';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport constants from '../constants/constants';\n\nlet ScreenHeight = Dimensions.get(\"window\").height;\n\nconst OptionScreen = ({ navigation, showOptions, setShowOptions, optionAnim }) => {\n\n    \n\n    \n  return (\n    <SafeAreaView style={styles.global}>\n      <Animated.View style={{backgroundColor:\"red\", flex: optionAnim}}>\n          {/* Upper view */}\n          <View style={styles.upperView}>\n              <View styles={styles.round}>\n                  <Text styles={styles.roundText}>BC</Text>\n              </View>\n              <Text>Bastien Clementi</Text>\n              <Text>@bastienclementi</Text>\n              <Text>bastien.clementi@gmail.com</Text>\n          </View>\n      </Animated.View>\n    \n       \n        <View  style={styles.right}>\n            <Pressable \n                style={{width:\"100%\", height: \"100%\"}}\n            onPress={() => {\n            setShowOptions(false)}}>\n            </Pressable>\n        </View>\n        \n      \n    </SafeAreaView>\n  )\n}\n\nexport default OptionScreen\n\nconst styles = StyleSheet.create({\n    global: {\n        flexDirection: \"row\",\n        position: \"absolute\",\n        width: \"100%\",\n        height: ScreenHeight\n    },\n\n    left: {\n        backgroundColor: \"red\",\n        flex: 1\n    },\n\n    right: {\n        flex: 1,\n        backgroundColor: \"transparent\",\n    },\n\n    upperView: {\n        backgroundColor: constants.blue\n    },\n\n    round: {\n        backgroundColor: \"red\",\n        borderRadius: 50\n    },\n\n    roundText: {\n        fontSize: 25\n    }\n})"]},"metadata":{},"sourceType":"module"}