{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React, { useState } from 'react';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { NavigationContainer } from '@react-navigation/native';\nimport constants from \"./../constants/constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar HeaderScreen = function HeaderScreen(_ref) {\n  var navigation = _ref.navigation,\n      title = _ref.title,\n      showOptions = _ref.showOptions,\n      setShowOptions = _ref.setShowOptions,\n      optionKickingIn = _ref.optionKickingIn;\n  return _jsxs(SafeAreaView, {\n    style: styles.header,\n    children: [_jsx(Pressable, {\n      onPress: function onPress() {\n        setShowOptions(true);\n        optionKickingIn();\n      },\n      children: _jsx(Image, {\n        source: require(\"./../assets/svg/options.png\"),\n        style: styles.png\n      })\n    }), _jsx(Text, {\n      style: styles.title,\n      children: title\n    }), _jsx(Pressable, {\n      children: _jsx(Image, {\n        source: require(\"./../assets/svg/mag-glass.png\"),\n        style: styles.png\n      })\n    }), _jsx(Pressable, {\n      children: _jsx(Image, {\n        source: require(\"./../assets/svg/bell.png\"),\n        style: styles.png\n      })\n    })]\n  });\n};\n\nexport default HeaderScreen;\nvar styles = StyleSheet.create({\n  header: {\n    flexDirection: 'row',\n    backgroundColor: constants.blue,\n    height: 100,\n    alignItems: 'center'\n  },\n  png: {\n    height: constants.iconsSize,\n    width: constants.iconsSize,\n    tintColor: \"white\",\n    marginLeft: 10,\n    marginRight: 10\n  },\n  title: {\n    color: \"white\",\n    flex: 1,\n    fontSize: 25,\n    marginLeft: 20\n  }\n});","map":{"version":3,"sources":["/Users/bastien/Desktop/trello-clone/screens/HeaderScreen.js"],"names":["React","useState","SafeAreaView","NavigationContainer","constants","HeaderScreen","navigation","title","showOptions","setShowOptions","optionKickingIn","styles","header","require","png","StyleSheet","create","flexDirection","backgroundColor","blue","height","alignItems","iconsSize","width","tintColor","marginLeft","marginRight","color","flex","fontSize"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,SAASC,YAAT,QAA6B,gCAA7B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,SAAP;;;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAyE;AAAA,MAAtEC,UAAsE,QAAtEA,UAAsE;AAAA,MAA1DC,KAA0D,QAA1DA,KAA0D;AAAA,MAAnDC,WAAmD,QAAnDA,WAAmD;AAAA,MAAtCC,cAAsC,QAAtCA,cAAsC;AAAA,MAAtBC,eAAsB,QAAtBA,eAAsB;AAI5F,SACE,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEC,MAAM,CAACC,MAA5B;AAAA,eACI,KAAC,SAAD;AAAW,MAAA,OAAO,EAAE,mBAAM;AACtBH,QAAAA,cAAc,CAAC,IAAD,CAAd;AACAC,QAAAA,eAAe;AAClB,OAHD;AAAA,gBAII,KAAC,KAAD;AAAO,QAAA,MAAM,EAAEG,OAAO,+BAAtB;AAAuD,QAAA,KAAK,EAAEF,MAAM,CAACG;AAArE;AAJJ,MADJ,EAQI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEH,MAAM,CAACJ,KAApB;AAAA,gBAA4BA;AAA5B,MARJ,EAUI,KAAC,SAAD;AAAA,gBACI,KAAC,KAAD;AAAO,QAAA,MAAM,EAAEM,OAAO,iCAAtB;AAAyD,QAAA,KAAK,EAAEF,MAAM,CAACG;AAAvE;AADJ,MAVJ,EAcI,KAAC,SAAD;AAAA,gBACI,KAAC,KAAD;AAAO,QAAA,MAAM,EAAED,OAAO,4BAAtB;AAAoD,QAAA,KAAK,EAAEF,MAAM,CAACG;AAAlE;AADJ,MAdJ;AAAA,IADF;AAoBD,CAxBD;;AA0BA,eAAeT,YAAf;AAEA,IAAMM,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BJ,EAAAA,MAAM,EAAE;AACJK,IAAAA,aAAa,EAAE,KADX;AAEJC,IAAAA,eAAe,EAAEd,SAAS,CAACe,IAFvB;AAGJC,IAAAA,MAAM,EAAE,GAHJ;AAIJC,IAAAA,UAAU,EAAE;AAJR,GADqB;AAQ7BP,EAAAA,GAAG,EAAE;AACDM,IAAAA,MAAM,EAAEhB,SAAS,CAACkB,SADjB;AAEDC,IAAAA,KAAK,EAAEnB,SAAS,CAACkB,SAFhB;AAGDE,IAAAA,SAAS,EAAE,OAHV;AAIDC,IAAAA,UAAU,EAAE,EAJX;AAKDC,IAAAA,WAAW,EAAE;AALZ,GARwB;AAgB7BnB,EAAAA,KAAK,EAAE;AACHoB,IAAAA,KAAK,EAAE,OADJ;AAEHC,IAAAA,IAAI,EAAE,CAFH;AAGHC,IAAAA,QAAQ,EAAE,EAHP;AAIHJ,IAAAA,UAAU,EAAE;AAJT;AAhBsB,CAAlB,CAAf","sourcesContent":["import { StyleSheet, Text, View, Pressable, Image } from 'react-native';\nimport React,{ useState } from 'react';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { NavigationContainer } from '@react-navigation/native';\nimport constants from './../constants/constants';\n\nconst HeaderScreen = ({ navigation, title, showOptions, setShowOptions, optionKickingIn }) => {\n\n    // const [showOptions, setShowOptions] = useState(false);\n\n  return (\n    <SafeAreaView style={styles.header}>\n        <Pressable onPress={() => {\n            setShowOptions(true);\n            optionKickingIn();\n        }}>\n            <Image source={require('./../assets/svg/options.png')} style={styles.png}/>\n        </Pressable>\n        \n        <Text style={styles.title}>{title}</Text>\n\n        <Pressable>\n            <Image source={require('./../assets/svg/mag-glass.png')} style={styles.png}/>\n        </Pressable>\n\n        <Pressable>\n            <Image source={require('./../assets/svg/bell.png')} style={styles.png}/>\n        </Pressable>\n    </SafeAreaView>\n  )\n}\n\nexport default HeaderScreen\n\nconst styles = StyleSheet.create({\n    header: {\n        flexDirection: 'row',\n        backgroundColor: constants.blue,\n        height: 100,\n        alignItems: 'center',\n    },\n\n    png: {\n        height: constants.iconsSize,\n        width: constants.iconsSize,\n        tintColor: \"white\",\n        marginLeft: 10,\n        marginRight: 10,\n    },\n\n    title: {\n        color: \"white\",\n        flex: 1,\n        fontSize: 25,\n        marginLeft: 20\n    },\n})"]},"metadata":{},"sourceType":"module"}