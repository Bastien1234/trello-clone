{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState, useRef, useEffect, useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport constants from \"../constants/constants\";\nimport HeaderScreen from \"./HeaderScreen\";\nimport OptionScreen from \"./OptionScreen\";\nimport axios from 'axios';\nimport { UserContext } from \"./../context/userContext\";\nimport DB from \"./../fakeDB/db\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar WorkspaceScreen = function WorkspaceScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useContext = useContext(UserContext),\n      userContext = _useContext.userContext,\n      setUserContext = _useContext.setUserContext;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      database = _useState2[0],\n      setDatabase = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      addingCard = _useState4[0],\n      setAddingCard = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      addingList = _useState6[0],\n      setAddingList = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      newListName = _useState8[0],\n      setNewListName = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      newCardName = _useState10[0],\n      setNewCardName = _useState10[1];\n\n  var selectedSpace = route.params.selectedSpace;\n  var SELECTED = selectedSpace;\n  useEffect(function () {\n    DB[0].spaces.forEach(function (el) {\n      if (el.name === SELECTED) {\n        setDatabase(el);\n      }\n    });\n  }, []);\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      showOptions = _useState12[0],\n      setShowOptions = _useState12[1];\n\n  var optionAnim = useRef(new Animated.Value(0)).current;\n  var addCardAnim = useRef(new Animated.Value(0)).current;\n\n  var optionKickingIn = function optionKickingIn() {\n    Animated.timing(optionAnim, {\n      toValue: 4,\n      duration: 555,\n      useNativeDriver: false\n    }).start();\n  };\n\n  var newCardAnimation = function newCardAnimation() {\n    Animated.timing(addCardAnim, {\n      toValue: 1,\n      duration: 333,\n      useNativeDriver: false\n    }).start();\n  };\n\n  var addContainer = function _callee(name) {\n    var newObj, response, rightContext;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            newObj = {\n              currentWorkspace: selectedSpace,\n              id: userContext._id,\n              containerName: name\n            };\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.post(constants.URL + \"/api/v1/users/addContainer\", newObj));\n\n          case 4:\n            response = _context.sent;\n\n            if (response.status === 200) {\n              userContext.spaces.forEach(function (el) {\n                if (el.name === selectedSpace) {\n                  el.containers.push({\n                    title: name,\n                    cards: []\n                  });\n                  rightContext = el;\n                }\n              });\n            }\n\n            setDatabase(_objectSpread({}, rightContext));\n            setAddingList(false);\n            _context.next = 14;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0.message);\n            setAddingList(false);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  var deleteContainer = function _callee2(name) {\n    var newObj, response, rightContext;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            newObj = {\n              currentWorkspace: selectedSpace,\n              id: userContext._id,\n              containerName: name\n            };\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(axios.post(constants.URL + \"/api/v1/users/deleteContainer\", newObj));\n\n          case 4:\n            response = _context2.sent;\n\n            if (response.status === 200) {\n              console.log(\"RESPONSE : \", response.data.data);\n              userContext.spaces.forEach(function (el) {\n                if (el.name === selectedSpace) {\n                  el.containers = response.data.data;\n                  rightContext = el;\n                }\n              });\n            }\n\n            setDatabase(_objectSpread({}, rightContext));\n            _context2.next = 12;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(\"Error message : \", _context2.t0.message);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  var addCard = function _callee3(name) {\n    var newObj, response, rightContext;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            newObj = {\n              currentWorkspace: selectedSpace,\n              id: userContext._id,\n              containerName: name,\n              cardName: name\n            };\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(axios.post(constants.URL + \"/api/v1/users/addCard\", newObj));\n\n          case 4:\n            response = _context3.sent;\n\n            if (response.status === 200) {\n              userContext.spaces.forEach(function (el) {\n                if (el.name === selectedSpace) {\n                  el.containers.forEach(function (cont) {\n                    if (cont.title === containerName) {\n                      cont.cards.push(newObj);\n                    }\n                  });\n                  rightContext = el;\n                }\n              });\n            }\n\n            setDatabase(_objectSpread({}, rightContext));\n            setAddingList(false);\n            _context3.next = 14;\n            break;\n\n          case 10:\n            _context3.prev = 10;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0.message);\n            setAddingList(false);\n\n          case 14:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: styles.global,\n    children: [addingCard === false && addingList === false ? _jsx(HeaderScreen, {\n      title: SELECTED,\n      showOptions: showOptions,\n      setShowOptions: setShowOptions,\n      optionKickingIn: optionKickingIn\n    }) : null, addingCard === true ? _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        backgroundColor: constants.blue,\n        height: 60,\n        alignItems: 'center'\n      },\n      children: [_jsx(Pressable, {\n        onPress: function onPress() {\n          return setAddingCard(false);\n        },\n        children: _jsx(Image, {\n          source: require(\"./../assets/svg/cancel.png\"),\n          style: styles.png\n        })\n      }), _jsx(Text, {\n        style: {\n          color: \"white\",\n          flex: 1,\n          fontSize: 25,\n          marginLeft: 20,\n          alignSelf: \"center\"\n        },\n        children: \"Ajouter une carte...\"\n      }), _jsx(Pressable, {\n        children: _jsx(Image, {\n          source: require(\"./../assets/svg/check.png\"),\n          style: styles.png\n        })\n      })]\n    }) : null, addingList === true ? _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        backgroundColor: constants.blue,\n        height: 60,\n        alignItems: 'center'\n      },\n      children: [_jsx(Pressable, {\n        onPress: function onPress() {\n          return setAddingList(false);\n        },\n        children: _jsx(Image, {\n          source: require(\"./../assets/svg/cancel.png\"),\n          style: styles.png\n        })\n      }), _jsx(Text, {\n        style: {\n          color: \"white\",\n          flex: 1,\n          fontSize: 25,\n          marginLeft: 20,\n          alignSelf: \"center\"\n        },\n        children: \"Ajouter une liste...\"\n      }), _jsx(Pressable, {\n        onPress: function onPress() {\n          addContainer(newListName);\n        },\n        children: _jsx(Image, {\n          source: require(\"./../assets/svg/check.png\"),\n          style: styles.png\n        })\n      })]\n    }) : null, _jsx(View, {\n      style: styles.ScrollViewContainer,\n      children: _jsxs(ScrollView, {\n        style: styles.mainBody,\n        horizontal: true,\n        children: [database[\"containers\"] ? database.containers.map(function (cont, idx) {\n          return _jsxs(View, {\n            style: styles.card,\n            children: [_jsxs(View, {\n              style: {\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\"\n              },\n              children: [_jsx(Text, {\n                style: {\n                  marginLeft: 10,\n                  fontSize: 17,\n                  marginTop: 10,\n                  marginBottom: 20\n                },\n                children: cont.title\n              }), _jsx(Pressable, {\n                onPress: function onPress() {\n                  deleteContainer(cont);\n                },\n                children: _jsx(Image, {\n                  source: require(\"./../assets/svg/cancel.png\"),\n                  style: {\n                    height: 20,\n                    width: 20,\n                    marginRight: 15\n                  }\n                })\n              })]\n            }), _jsx(View, {\n              children: cont.cards.map(function (card, cardIdx) {\n                var totalCheckBoxes = 0;\n                var actualCheckedBoxes = 0;\n\n                for (var _iterator = _createForOfIteratorHelperLoose(card.checklist), _step; !(_step = _iterator()).done;) {\n                  var el = _step.value;\n\n                  if (el.done === true) {\n                    totalCheckBoxes++;\n                    actualCheckedBoxes++;\n                  } else {\n                    totalCheckBoxes++;\n                  }\n                }\n\n                return _jsxs(View, {\n                  style: {\n                    backgroundColor: \"white\",\n                    width: \"95%\",\n                    alignSelf: \"center\",\n                    borderRadius: 5,\n                    marginBottom: 5\n                  },\n                  children: [_jsx(Text, {\n                    style: {\n                      marginLeft: 10,\n                      marginTop: 8\n                    },\n                    children: card.cardTitle\n                  }), _jsxs(View, {\n                    style: {\n                      flexDirection: \"row\"\n                    },\n                    children: [_jsx(Image, {\n                      source: require(\"./../assets/svg/check-box.png\"),\n                      style: {\n                        height: 15,\n                        width: 15,\n                        marginLeft: 30\n                      }\n                    }), _jsxs(Text, {\n                      style: {\n                        fontSize: 15,\n                        marginLeft: 15,\n                        marginBottom: 8\n                      },\n                      children: [actualCheckedBoxes, \"/\", totalCheckBoxes]\n                    })]\n                  })]\n                }, cardIdx);\n              })\n            }), _jsx(Pressable, {\n              style: {\n                marginTop: 25,\n                marginBottom: 15\n              },\n              onPress: function onPress() {\n                setAddingCard(!addingCard);\n                newCardAnimation();\n              },\n              children: _jsx(Text, {\n                style: {\n                  marginLeft: 10,\n                  color: \"green\"\n                },\n                children: \"+ Ajouter une carte\"\n              })\n            })]\n          }, idx);\n        }) : null, addingList === false ? _jsx(Pressable, {\n          style: styles.addList,\n          onPress: function onPress() {\n            return setAddingList(true);\n          },\n          children: _jsx(Text, {\n            style: {\n              color: \"green\",\n              fontSize: 25\n            },\n            children: \"Ajouter une liste\"\n          })\n        }) : _jsx(TextInput, {\n          style: styles.addListPlaceholder,\n          placeholder: \"Ajouter une liste\",\n          value: newListName,\n          onChangeText: function onChangeText(t) {\n            setNewListName(t);\n            console.log(newListName);\n          }\n        })]\n      })\n    }), addingCard === true ? _jsx(View, {\n      style: {\n        flex: 1,\n        backgroundColor: \"white\"\n      },\n      children: _jsxs(Animated.View, {\n        style: {\n          opacity: addCardAnim\n        },\n        children: [_jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            paddingTop: 15,\n            height: 60,\n            fontSize: 25\n          },\n          children: [_jsx(TextInput, {\n            placeholder: \"Ajouter nouvelle carte...\",\n            style: {\n              color: \"green\",\n              backgroundColor: \"lightgrey\",\n              borderRadius: 5,\n              height: 45,\n              paddingLeft: 10,\n              width: 200,\n              marginRight: 5\n            }\n          }), _jsx(Pressable, {\n            children: _jsx(Image, {\n              source: require(\"./../assets/svg/cancel.png\"),\n              style: {\n                height: 20,\n                width: 20\n              }\n            })\n          })]\n        }), _jsx(Pressable, {\n          style: {\n            alignSelf: \"center\",\n            marginTop: 10,\n            backgroundColor: \"lightgreen\",\n            width: 100,\n            height: 35,\n            borderRadius: 5,\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          },\n          children: _jsx(Text, {\n            children: \"Ajouter\"\n          })\n        })]\n      })\n    }) : _jsx(View, {\n      style: {\n        backgroundColor: \"white\",\n        flex: 1\n      }\n    }), showOptions === true ? _jsx(OptionScreen, {\n      showOptions: showOptions,\n      setShowOptions: setShowOptions,\n      optionAnim: optionAnim\n    }) : null]\n  });\n};\n\nexport default WorkspaceScreen;\nvar styles = StyleSheet.create({\n  global: {\n    backgroundColor: constants.blue,\n    flex: 1\n  },\n  mainBody: {\n    backgroundColor: \"white\",\n    height: 150\n  },\n  card: {\n    backgroundColor: \"lightgrey\",\n    width: 300,\n    marginLeft: 20,\n    marginRight: 5,\n    marginTop: 15,\n    borderRadius: 5,\n    height: 225\n  },\n  addList: {\n    backgroundColor: \"white\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: 50,\n    marginTop: 15,\n    width: 200,\n    marginRight: 20,\n    borderRadius: 5,\n    borderWidth: 1,\n    borderColor: \"lightgrey\",\n    fontSize: 20\n  },\n  addListPlaceholder: {\n    backgroundColor: \"white\",\n    color: \"green\",\n    paddingLeft: 10,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: 50,\n    marginTop: 15,\n    width: 200,\n    marginRight: 20,\n    borderRadius: 5,\n    borderWidth: 1,\n    borderColor: \"lightgrey\",\n    fontSize: 20\n  },\n  ScrollViewContainer: {\n    height: 275\n  },\n  png: {\n    height: constants.iconsSize,\n    width: constants.iconsSize,\n    tintColor: \"white\",\n    marginLeft: 10,\n    marginRight: 10,\n    alignSelf: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/mr b/Desktop/trello-clone-native/screens/WorkspaceScreen.js"],"names":["React","useState","useRef","useEffect","useContext","SafeAreaView","constants","HeaderScreen","OptionScreen","axios","UserContext","DB","WorkspaceScreen","route","navigation","userContext","setUserContext","database","setDatabase","addingCard","setAddingCard","addingList","setAddingList","newListName","setNewListName","newCardName","setNewCardName","selectedSpace","params","SELECTED","spaces","forEach","el","name","showOptions","setShowOptions","optionAnim","Animated","Value","current","addCardAnim","optionKickingIn","timing","toValue","duration","useNativeDriver","start","newCardAnimation","addContainer","newObj","currentWorkspace","id","_id","containerName","post","URL","response","status","containers","push","title","cards","rightContext","console","log","message","deleteContainer","data","addCard","cardName","cont","styles","global","flexDirection","backgroundColor","blue","height","alignItems","require","png","color","flex","fontSize","marginLeft","alignSelf","ScrollViewContainer","mainBody","map","idx","card","justifyContent","marginTop","marginBottom","width","marginRight","cardIdx","totalCheckBoxes","actualCheckedBoxes","checklist","done","borderRadius","cardTitle","addList","addListPlaceholder","t","opacity","paddingTop","paddingLeft","StyleSheet","create","borderWidth","borderColor","iconsSize","tintColor"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useContext } from 'react';\r\nimport { StyleSheet, Text, View, Image, TextInput, Pressable, Animated, ScrollView } from 'react-native';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport constants from '../constants/constants';\r\nimport HeaderScreen from './HeaderScreen';\r\nimport OptionScreen from './OptionScreen';\r\nimport axios from 'axios';\r\n\r\nimport { UserContext } from './../context/userContext';\r\n\r\nimport DB from './../fakeDB/db';\r\n\r\nconst WorkspaceScreen = ({ route, navigation }) => {\r\n\r\n    const { userContext, setUserContext } = useContext(UserContext);\r\n\r\n    const [database, setDatabase] = useState({});\r\n    const [addingCard, setAddingCard] = useState(false);\r\n    const [addingList, setAddingList] = useState(false);\r\n    const [newListName, setNewListName] = useState(\"\");\r\n    const [newCardName, setNewCardName] = useState(\"\");\r\n\r\n    const { selectedSpace } = route.params;\r\n\r\n    let SELECTED = selectedSpace;\r\n    \r\n    useEffect(() => {\r\n        DB[0].spaces.forEach(el => {\r\n            if (el.name === SELECTED) {\r\n                setDatabase(el);\r\n            }\r\n        })\r\n        \r\n    }, [])\r\n\r\n\r\n    const [showOptions, setShowOptions] = useState(false);\r\n\r\n    const optionAnim = useRef(new Animated.Value(0)).current;\r\n    const addCardAnim = useRef(new Animated.Value(0)).current;\r\n\r\n    const optionKickingIn = () => {\r\n        Animated.timing(optionAnim, {\r\n            toValue : 4,\r\n            duration: 555,\r\n            useNativeDriver: false\r\n        }).start();\r\n    }\r\n\r\n    const newCardAnimation = () => {\r\n        Animated.timing(addCardAnim, {\r\n            toValue: 1,\r\n            duration: 333,\r\n            useNativeDriver: false\r\n        }).start();\r\n    }\r\n\r\n    const addContainer = async (name) => {\r\n        try {\r\n            const newObj = {\r\n                currentWorkspace: selectedSpace,\r\n                id: userContext._id,\r\n                containerName: name\r\n            }\r\n            const response = await axios.post(`${constants.URL}/api/v1/users/addContainer`, newObj)\r\n            let rightContext;\r\n            if (response.status === 200) {\r\n                userContext.spaces.forEach(el => {\r\n                    if (el.name===selectedSpace) {\r\n                        el.containers.push({\r\n                            title: name,\r\n                            cards: []\r\n                        })\r\n                        rightContext = el;\r\n                    }\r\n                })\r\n            }\r\n\r\n            setDatabase({...rightContext})\r\n            setAddingList(false);\r\n        } catch (e) {\r\n            console.log(e.message);\r\n            setAddingList(false);\r\n        }\r\n    }\r\n\r\n    const deleteContainer = async (name) => {\r\n        try {\r\n            const newObj = {\r\n                currentWorkspace: selectedSpace,\r\n                id: userContext._id,\r\n                containerName: name\r\n            }\r\n            const response = await axios.post(`${constants.URL}/api/v1/users/deleteContainer`, newObj);\r\n\r\n            let rightContext;\r\n\r\n            if (response.status === 200) {\r\n                console.log(\"RESPONSE : \", response.data.data)\r\n                userContext.spaces.forEach(el => {\r\n                    if (el.name===selectedSpace) {\r\n                        el.containers = response.data.data;\r\n                        rightContext = el;\r\n                    }\r\n                })\r\n            }\r\n\r\n            setDatabase({...rightContext})\r\n\r\n        } catch (err) {\r\n            console.log(\"Error message : \", err.message)\r\n        }\r\n    }\r\n\r\n    const addCard = async (name) => {\r\n        try {\r\n            const newObj = {\r\n                currentWorkspace: selectedSpace,\r\n                id: userContext._id,\r\n                containerName: name,\r\n                cardName: name,\r\n            }\r\n            const response = await axios.post(`${constants.URL}/api/v1/users/addCard`, newObj)\r\n            let rightContext;\r\n            if (response.status === 200) {\r\n                userContext.spaces.forEach(el => {\r\n                    if (el.name===selectedSpace) {\r\n                        el.containers.forEach(cont => {\r\n                            if (cont.title === containerName) {\r\n                                cont.cards.push(newObj);\r\n                            }\r\n                        })\r\n                        rightContext = el;\r\n                    }\r\n                })\r\n            }\r\n\r\n            setDatabase({...rightContext})\r\n            setAddingList(false);\r\n        } catch (e) {\r\n            console.log(e.message);\r\n            setAddingList(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <SafeAreaView style={styles.global}>\r\n            {\r\n                (addingCard === false && addingList === false) ? \r\n                <HeaderScreen \r\n                title={SELECTED} \r\n                showOptions={showOptions} \r\n                setShowOptions={setShowOptions}\r\n                optionKickingIn={optionKickingIn}/> : null\r\n            }\r\n\r\n            {\r\n                addingCard === true ? \r\n                // Adding card header\r\n                <View style={{\r\n                    flexDirection: 'row',\r\n                    backgroundColor: constants.blue,\r\n                    height: 60,\r\n                    alignItems: 'center',\r\n                }}>\r\n                    <Pressable\r\n                        onPress={() => setAddingCard(false)}\r\n                    >\r\n                        <Image source={require('./../assets/svg/cancel.png')} style={styles.png}/>\r\n                    </Pressable>\r\n\r\n                    <Text style={{\r\n                        color: \"white\",\r\n                        flex: 1,\r\n                        fontSize: 25,\r\n                        marginLeft: 20,\r\n                        alignSelf: \"center\"\r\n                    }}>Ajouter une carte...</Text>\r\n\r\n                    <Pressable>\r\n                    <Image source={require('./../assets/svg/check.png')} style={styles.png}/>\r\n                    </Pressable>\r\n                </View> : null\r\n            }\r\n\r\n            {\r\n                addingList === true ? \r\n                // Adding list header\r\n                <View style={{\r\n                    flexDirection: 'row',\r\n                    backgroundColor: constants.blue,\r\n                    height: 60,\r\n                    alignItems: 'center',\r\n                }}>\r\n                    <Pressable\r\n                        onPress={() => setAddingList(false)}>\r\n                        <Image source={require('./../assets/svg/cancel.png')} style={styles.png}/>\r\n                    </Pressable>\r\n\r\n                    <Text style={{\r\n                        color: \"white\",\r\n                        flex: 1,\r\n                        fontSize: 25,\r\n                        marginLeft: 20,\r\n                        alignSelf: \"center\"\r\n                    }}>Ajouter une liste...</Text>\r\n\r\n                    <Pressable\r\n                        onPress={() => {\r\n                            addContainer(newListName);\r\n                        }}>\r\n                        <Image source={require('./../assets/svg/check.png')} style={styles.png}/>\r\n                    </Pressable>\r\n                </View> : null\r\n            }\r\n            <View style={styles.ScrollViewContainer}>\r\n            <ScrollView style={styles.mainBody} horizontal={true}>\r\n                {\r\n                    database[\"containers\"] ? \r\n\r\n                    \r\n                    \r\n                    database.containers.map((cont, idx) => {\r\n\r\n                        return(\r\n                            <View style={styles.card} key={idx}>\r\n                                <View style={{flexDirection: \"row\", alignItems: \"center\", justifyContent: \"space-between\"}}>\r\n                                    <Text\r\n                                        style={{\r\n                                            marginLeft: 10,\r\n                                            fontSize: 17,\r\n                                            marginTop: 10,\r\n                                            marginBottom: 20\r\n                                        }}\r\n                                    >{cont.title}</Text>\r\n                                    <Pressable onPress={() => {\r\n                                        deleteContainer(cont);\r\n                                    }}>\r\n                                        <Image source={require('./../assets/svg/cancel.png')} style={{height: 20, width: 20, marginRight: 15}}/>\r\n                                    </Pressable>\r\n                                </View>\r\n                                \r\n                                <View>\r\n                                    {\r\n                                        cont.cards.map((card, cardIdx) => {\r\n                                            let totalCheckBoxes = 0;\r\n                                            let actualCheckedBoxes = 0;\r\n\r\n                                            for (let el of card.checklist) {\r\n                                                if (el.done === true) {\r\n                                                    totalCheckBoxes ++;\r\n                                                    actualCheckedBoxes ++;\r\n                                                } else {\r\n                                                    totalCheckBoxes ++;\r\n                                                }\r\n                                            }\r\n                                            return(\r\n                                                <View \r\n                                                    key={cardIdx}\r\n                                                    style={{\r\n                                                        backgroundColor: \"white\",\r\n                                                        width: \"95%\",\r\n                                                        alignSelf: \"center\",\r\n                                                        borderRadius: 5,\r\n                                                        marginBottom: 5\r\n                                                    }}>\r\n                                                    <Text style={{marginLeft: 10, marginTop: 8}}>{card.cardTitle}</Text>\r\n                                                    <View style={{\r\n                                                        flexDirection: \"row\"\r\n                                                    }}>\r\n                                                        <Image \r\n                                                            source={require('./../assets/svg/check-box.png')}\r\n                                                            style={{\r\n                                                                height: 15, width: 15, marginLeft: 30\r\n                                                            }}/>\r\n                                                        <Text style={{fontSize: 15, marginLeft: 15, marginBottom: 8}}>{actualCheckedBoxes}/{totalCheckBoxes}</Text>\r\n                                                    </View>\r\n                                                    \r\n                                                </View>\r\n                                                )\r\n                                        })\r\n                                    }\r\n                                </View>\r\n                                <Pressable \r\n                                    style={{\r\n                                        marginTop: 25,\r\n                                        marginBottom: 15\r\n                                    }}\r\n                                    onPress={() => {\r\n                                        setAddingCard(!addingCard)\r\n                                        newCardAnimation();\r\n                                    }}>\r\n                                    <Text style={{\r\n                                        marginLeft: 10,\r\n                                        color: \"green\"\r\n                                    }}>+ Ajouter une carte</Text>\r\n                                </Pressable>\r\n\r\n                            </View>\r\n                            )\r\n                    })\r\n\r\n                    : null\r\n                }\r\n\r\n                {\r\n                    addingList === false ? \r\n\r\n                    <Pressable \r\n                        style={styles.addList}\r\n                        onPress={() => setAddingList(true)}\r\n                        >\r\n                        <Text style={{color: \"green\", fontSize: 25}}>Ajouter une liste</Text>\r\n                    </Pressable> :\r\n\r\n                    <TextInput \r\n                        style={styles.addListPlaceholder}\r\n                        placeholder=\"Ajouter une liste\"\r\n                        value={newListName}\r\n                        onChangeText={t => {setNewListName(t); console.log(newListName)}}\r\n                    />\r\n\r\n\r\n\r\n                }\r\n\r\n                \r\n            </ScrollView>\r\n            </View>\r\n\r\n            {addingCard === true ?\r\n\r\n            <View style={{\r\n                flex: 1,\r\n                backgroundColor: \"white\",\r\n            }}>\r\n                <Animated.View style={{\r\n                    opacity: addCardAnim,\r\n                }}>\r\n                    <View style={{\r\n                        flexDirection: \"row\", \r\n                        justifyContent: \"center\", \r\n                        alignItems: \"center\",\r\n                        paddingTop: 15,\r\n                        height: 60,\r\n                        fontSize: 25,\r\n                        }}>\r\n                        <TextInput \r\n                            placeholder=\"Ajouter nouvelle carte...\"\r\n                            style={{\r\n                                color: \"green\",\r\n                                backgroundColor: \"lightgrey\",\r\n                                borderRadius: 5,\r\n                                height: 45,\r\n                                paddingLeft: 10,\r\n                                width: 200,\r\n                                marginRight: 5,\r\n                            }}\r\n                        />\r\n                        <Pressable>\r\n                            <Image \r\n                                source={require('./../assets/svg/cancel.png')} \r\n                                style={{height: 20, width: 20}}/>\r\n                        </Pressable>\r\n                    </View>\r\n                    \r\n                    <Pressable style={{\r\n                        alignSelf: \"center\",\r\n                        marginTop: 10,\r\n                        backgroundColor: \"lightgreen\",\r\n                        width: 100,\r\n                        height: 35,\r\n                        borderRadius: 5,\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\"\r\n                    }}>\r\n                        <Text>Ajouter</Text>\r\n                    </Pressable>\r\n                </Animated.View>\r\n            </View>\r\n            \r\n            \r\n\r\n            : \r\n            \r\n            <View style={{backgroundColor: \"white\", flex:1}}></View>}\r\n\r\n\r\n\r\n            { showOptions === true ? \r\n                <OptionScreen \r\n                    showOptions={showOptions} \r\n                    setShowOptions={setShowOptions}\r\n                    optionAnim={optionAnim}\r\n                    /> : null }\r\n            \r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nexport default WorkspaceScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    global: {\r\n        backgroundColor: constants.blue,\r\n        flex: 1,\r\n    },\r\n\r\n    mainBody: {\r\n\r\n        backgroundColor: \"white\",\r\n        height: 150\r\n    },\r\n\r\n    card: {\r\n        backgroundColor: \"lightgrey\",\r\n        width: 300,\r\n        marginLeft: 20,\r\n        marginRight: 5,\r\n        marginTop: 15,\r\n        borderRadius: 5,\r\n        height: 225\r\n    },\r\n\r\n    addList: {\r\n        backgroundColor: \"white\", \r\n        alignItems: \"center\", \r\n        justifyContent: \"center\", \r\n        height: 50, \r\n        marginTop: 15, \r\n        width: 200,\r\n        marginRight: 20,\r\n        borderRadius: 5,\r\n        borderWidth: 1,\r\n        borderColor: \"lightgrey\",\r\n        fontSize: 20\r\n    },\r\n\r\n    addListPlaceholder: {\r\n        backgroundColor: \"white\", \r\n        color: \"green\",\r\n        paddingLeft: 10,\r\n        alignItems: \"center\", \r\n        justifyContent: \"center\", \r\n        height: 50, \r\n        marginTop: 15, \r\n        width: 200,\r\n        marginRight: 20,\r\n        borderRadius: 5,\r\n        borderWidth: 1,\r\n        borderColor: \"lightgrey\",\r\n        fontSize: 20\r\n    },\r\n\r\n    ScrollViewContainer: {\r\n        height: 275\r\n    },\r\n\r\n    png: {\r\n        height: constants.iconsSize,\r\n        width: constants.iconsSize,\r\n        tintColor: \"white\",\r\n        marginLeft: 10,\r\n        marginRight: 10,\r\n        alignSelf: \"center\"\r\n    },\r\n})\r\n"]},"metadata":{},"sourceType":"module"}