{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport constants from \"../constants/constants\";\nimport HeaderScreen from \"./HeaderScreen\";\nimport OptionScreen from \"./OptionScreen\";\nimport DB from \"./../fakeDB/db\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LogScreen = function LogScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showOptions = _useState2[0],\n      setShowOptions = _useState2[1];\n\n  var optionAnim = useRef(new Animated.Value(0)).current;\n\n  var optionKickingIn = function optionKickingIn() {\n    Animated.timing(optionAnim, {\n      toValue: 4,\n      duration: 1000,\n      useNativeDriver: false\n    }).start();\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: styles.global,\n    children: [_jsx(HeaderScreen, {\n      title: \"Tableaux\",\n      showOptions: showOptions,\n      setShowOptions: setShowOptions,\n      optionKickingIn: optionKickingIn\n    }), _jsxs(View, {\n      style: styles.mainBody,\n      children: [_jsx(Text, {\n        style: styles.subTitle,\n        children: \"Espace de travail Trello\"\n      }), DB.map(function (el, idx) {\n        return _jsxs(Pressable, {\n          style: styles.workspace,\n          children: [_jsx(Image, {\n            style: styles.workspaceImage,\n            source: require(\"./../assets/images/motocross.jpg\")\n          }), _jsx(Text, {\n            style: styles.workspaceText,\n            children: el.name\n          })]\n        }, idx);\n      })]\n    }), showOptions === true ? _jsx(OptionScreen, {\n      showOptions: showOptions,\n      setShowOptions: setShowOptions,\n      optionAnim: optionAnim\n    }) : null]\n  });\n};\n\nexport default LogScreen;\nvar styles = StyleSheet.create({\n  global: {\n    backgroundColor: constants.blue,\n    flex: 1\n  },\n  mainBody: {\n    flex: 1,\n    backgroundColor: \"white\"\n  },\n  subTitle: {\n    fontSize: 16,\n    marginTop: 12,\n    marginBottom: 12,\n    marginLeft: 15\n  },\n  workspace: {\n    flexDirection: \"row\",\n    backgroundColor: \"lightgrey\",\n    marginBottom: 10,\n    height: 65,\n    alignItems: \"center\",\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderTopColor: \"grey\",\n    borderBottomColor: \"grey\"\n  },\n  workspaceImage: {\n    height: 50,\n    width: 50,\n    marginLeft: 15,\n    borderRadius: 5\n  },\n  workspaceText: {\n    marginLeft: 15,\n    fontSize: 20\n  }\n});","map":{"version":3,"names":["React","useState","useRef","SafeAreaView","constants","HeaderScreen","OptionScreen","DB","LogScreen","navigation","showOptions","setShowOptions","optionAnim","Animated","Value","current","optionKickingIn","timing","toValue","duration","useNativeDriver","start","styles","global","mainBody","subTitle","map","el","idx","workspace","workspaceImage","require","workspaceText","name","StyleSheet","create","backgroundColor","blue","flex","fontSize","marginTop","marginBottom","marginLeft","flexDirection","height","alignItems","borderTopWidth","borderBottomWidth","borderTopColor","borderBottomColor","width","borderRadius"],"sources":["C:/Users/mr b/Desktop/trello-clone-native/screens/TableauxScreen.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { StyleSheet, Text, View, Image, TextInput, Pressable, Animated } from 'react-native';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport constants from '../constants/constants';\r\nimport HeaderScreen from './HeaderScreen';\r\nimport OptionScreen from './OptionScreen';\r\n\r\nimport DB from './../fakeDB/db';\r\n\r\nconst LogScreen = ({ navigation }) => {\r\n\r\n    const [showOptions, setShowOptions] = useState(false);\r\n\r\n    const optionAnim = useRef(new Animated.Value(0)).current;\r\n\r\n    const optionKickingIn = () => {\r\n        Animated.timing(optionAnim, {\r\n            toValue : 4,\r\n            duration: 1000,\r\n            useNativeDriver: false\r\n        }).start();\r\n    }\r\n\r\n    return (\r\n        <SafeAreaView style={styles.global}>\r\n            <HeaderScreen \r\n                title={\"Tableaux\"} \r\n                showOptions={showOptions} \r\n                setShowOptions={setShowOptions}\r\n                optionKickingIn={optionKickingIn}/>\r\n            <View style={styles.mainBody}>\r\n                <Text style={styles.subTitle}>Espace de travail Trello</Text>\r\n                {\r\n                    // Populate from DB\r\n\r\n                    DB.map((el, idx) => {\r\n                        return(\r\n                                <Pressable style={styles.workspace} key={idx}>\r\n                                    <Image \r\n                                        style={styles.workspaceImage}\r\n                                        source={require(\"./../assets/images/motocross.jpg\")} />\r\n                                    <Text style={styles.workspaceText}>{el.name}</Text>\r\n                                </Pressable>\r\n                            )\r\n                    })\r\n                }\r\n            </View>\r\n\r\n            { showOptions === true ? \r\n                <OptionScreen \r\n                    showOptions={showOptions} \r\n                    setShowOptions={setShowOptions}\r\n                    optionAnim={optionAnim}\r\n                    /> : null }\r\n            \r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nexport default LogScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    global: {\r\n        backgroundColor: constants.blue,\r\n        flex: 1\r\n    },\r\n\r\n    mainBody: {\r\n        flex: 1,\r\n        backgroundColor: \"white\"\r\n    },\r\n\r\n    subTitle: {\r\n        fontSize: 16,\r\n        marginTop: 12,\r\n        marginBottom: 12,\r\n        marginLeft: 15\r\n    },\r\n\r\n    workspace: {\r\n        flexDirection: \"row\",\r\n        backgroundColor: \"lightgrey\",\r\n        marginBottom: 10,\r\n        height: 65,\r\n        alignItems: \"center\",\r\n        borderTopWidth: 1,\r\n        borderBottomWidth: 1,\r\n        borderTopColor: \"grey\",\r\n        borderBottomColor: \"grey\",\r\n    },\r\n\r\n    workspaceImage: {\r\n        height: 50,\r\n        width: 50,\r\n        marginLeft: 15,\r\n        borderRadius: 5\r\n    },\r\n\r\n    workspaceText: {\r\n        marginLeft: 15,\r\n        fontSize: 20\r\n    }\r\n})\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}