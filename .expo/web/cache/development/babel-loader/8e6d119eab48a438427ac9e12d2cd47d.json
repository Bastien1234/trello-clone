{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport HeaderScreen from \"./HeaderScreen\";\nimport OptionScreen from \"./OptionScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LogScreen = function LogScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showOptions = _useState2[0],\n      setShowOptions = _useState2[1];\n\n  var optionAnim = useRef(new Animated.Value(0)).current;\n\n  var optionKickingIn = function optionKickingIn() {\n    Animated.timing(optionAnimin, {\n      toValue: 1,\n      duration: 500\n    }).start();\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: styles.global,\n    children: [_jsx(HeaderScreen, {\n      title: \"nik\",\n      showOptions: showOptions,\n      setShowOptions: setShowOptions\n    }), _jsx(View, {\n      style: styles.mainBody,\n      children: _jsx(Text, {\n        children: \"Coucou\"\n      })\n    }), showOptions === true ? _jsx(OptionScreen, {\n      showOptions: showOptions,\n      setShowOptions: setShowOptions\n    }) : null]\n  });\n};\n\nexport default LogScreen;\nvar styles = StyleSheet.create({\n  global: {\n    backgroundColor: \"rgb(235, 235, 235)\",\n    flex: 1\n  },\n  mainBody: {\n    flex: 1,\n    backgroundColor: \"grey\"\n  }\n});","map":{"version":3,"names":["React","useState","useRef","SafeAreaView","HeaderScreen","OptionScreen","LogScreen","navigation","showOptions","setShowOptions","optionAnim","Animated","Value","current","optionKickingIn","timing","optionAnimin","toValue","duration","start","styles","global","mainBody","StyleSheet","create","backgroundColor","flex"],"sources":["C:/Users/mr b/Desktop/trello-clone/screens/LogScreen.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { StyleSheet, Text, View, Image, TextInput, Pressable, Animated } from 'react-native';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport HeaderScreen from './HeaderScreen';\r\nimport OptionScreen from './OptionScreen';\r\n\r\nconst LogScreen = ({ navigation }) => {\r\n\r\n    const [showOptions, setShowOptions] = useState(false);\r\n\r\n    const optionAnim = useRef(new Animated.Value(0)).current;\r\n\r\n    const optionKickingIn = () => {\r\n        Animated.timing(optionAnimin, {\r\n            toValue : 1,\r\n            duration: 500\r\n        }).start();\r\n    }\r\n\r\n    return (\r\n        <SafeAreaView style={styles.global}>\r\n            <HeaderScreen \r\n                title={\"nik\"} \r\n                showOptions={showOptions} \r\n                setShowOptions={setShowOptions}/>\r\n            <View style={styles.mainBody}>\r\n                <Text>Coucou</Text>\r\n            </View>\r\n\r\n            { showOptions === true ? \r\n                <OptionScreen \r\n                    showOptions={showOptions} \r\n                    setShowOptions={setShowOptions}/> : null }\r\n            \r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nexport default LogScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    global: {\r\n        backgroundColor: \"rgb(235, 235, 235)\",\r\n        flex: 1\r\n    },\r\n\r\n    mainBody: {\r\n        flex: 1,\r\n        backgroundColor: \"grey\"\r\n    }\r\n})\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;;;;;;;;AAEA,SAASC,YAAT,QAA6B,gCAA7B;AACA,OAAOC,YAAP;AACA,OAAOC,YAAP;;;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAoB;EAAA,IAAjBC,UAAiB,QAAjBA,UAAiB;;EAElC,gBAAsCN,QAAQ,CAAC,KAAD,CAA9C;EAAA;EAAA,IAAOO,WAAP;EAAA,IAAoBC,cAApB;;EAEA,IAAMC,UAAU,GAAGR,MAAM,CAAC,IAAIS,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAD,CAAN,CAA8BC,OAAjD;;EAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;IAC1BH,QAAQ,CAACI,MAAT,CAAgBC,YAAhB,EAA8B;MAC1BC,OAAO,EAAG,CADgB;MAE1BC,QAAQ,EAAE;IAFgB,CAA9B,EAGGC,KAHH;EAIH,CALD;;EAOA,OACI,MAAC,YAAD;IAAc,KAAK,EAAEC,MAAM,CAACC,MAA5B;IAAA,WACI,KAAC,YAAD;MACI,KAAK,EAAE,KADX;MAEI,WAAW,EAAEb,WAFjB;MAGI,cAAc,EAAEC;IAHpB,EADJ,EAKI,KAAC,IAAD;MAAM,KAAK,EAAEW,MAAM,CAACE,QAApB;MAAA,UACI,KAAC,IAAD;QAAA;MAAA;IADJ,EALJ,EASMd,WAAW,KAAK,IAAhB,GACE,KAAC,YAAD;MACI,WAAW,EAAEA,WADjB;MAEI,cAAc,EAAEC;IAFpB,EADF,GAG0C,IAZhD;EAAA,EADJ;AAiBH,CA9BD;;AAgCA,eAAeH,SAAf;AAEA,IAAMc,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;EAC7BH,MAAM,EAAE;IACJI,eAAe,EAAE,oBADb;IAEJC,IAAI,EAAE;EAFF,CADqB;EAM7BJ,QAAQ,EAAE;IACNI,IAAI,EAAE,CADA;IAEND,eAAe,EAAE;EAFX;AANmB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}