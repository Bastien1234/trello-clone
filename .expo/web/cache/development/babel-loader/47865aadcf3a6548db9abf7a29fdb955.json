{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useMemo, useContext } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport TableauxScreen from \"./screens/TableauxScreen\";\nimport WorkspaceScreen from \"./screens/WorkspaceScreen\";\nimport CardScreen from \"./screens/CardScreen\";\nimport SignupScreen from \"./screens/SignupScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport { UserContext, UserState } from \"./context/userContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      userContext = _useState2[0],\n      setUserContext = _useState2[1];\n\n  var value = useMemo(function () {\n    return {\n      userContext: userContext,\n      setUserContext: setUserContext\n    };\n  }, [userContext, setUserContext]);\n  return _jsx(UserContext.Provider, {\n    value: value,\n    children: _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        initialRouteName: \"Login\",\n        children: [_jsx(Stack.Screen, {\n          name: \"Tableaux\",\n          component: TableauxScreen,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Workspace\",\n          component: WorkspaceScreen,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Card\",\n          component: CardScreen,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Signup\",\n          component: SignupScreen,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen,\n          options: {\n            headerShown: false\n          }\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"sources":["C:/Users/mr b/Desktop/trello-clone-native/App.js"],"names":["StatusBar","React","useState","useMemo","useContext","NavigationContainer","createNativeStackNavigator","TableauxScreen","WorkspaceScreen","CardScreen","SignupScreen","LoginScreen","UserContext","UserState","Stack","App","userContext","setUserContext","value","headerShown"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,EAAmCC,UAAnC,QAAqD,OAArD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAOC,cAAP;AACA,OAAOC,eAAP;AACA,OAAOC,UAAP;AACA,OAAOC,YAAP;AACA,OAAOC,WAAP;AACA,SAASC,WAAT,EAAsBC,SAAtB;;;AAEA,IAAMC,KAAK,GAAGR,0BAA0B,EAAxC;AAIA,eAAe,SAASS,GAAT,GAAe;AAC5B,kBAAsCb,QAAQ,CAAC,IAAD,CAA9C;AAAA;AAAA,MAAOc,WAAP;AAAA,MAAoBC,cAApB;;AAEA,MAAMC,KAAK,GAAGf,OAAO,CAAC;AAAA,WAAO;AAAEa,MAAAA,WAAW,EAAXA,WAAF;AAAeC,MAAAA,cAAc,EAAdA;AAAf,KAAP;AAAA,GAAD,EAA0C,CAACD,WAAD,EAAcC,cAAd,CAA1C,CAArB;AACA,SACE,KAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,KAA7B;AAAA,cACE,KAAC,mBAAD;AAAA,gBACE,MAAC,KAAD,CAAO,SAAP;AAAkB,QAAA,gBAAgB,EAAC,OAAnC;AAAA,mBACE,KAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAC,UAAnB;AAA8B,UAAA,SAAS,EAAEX,cAAzC;AAAyD,UAAA,OAAO,EAAE;AAAEY,YAAAA,WAAW,EAAE;AAAf;AAAlE,UADF,EAEE,KAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAC,WAAnB;AAA+B,UAAA,SAAS,EAAEX,eAA1C;AAA2D,UAAA,OAAO,EAAE;AAAEW,YAAAA,WAAW,EAAE;AAAf;AAApE,UAFF,EAGE,KAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAC,MAAnB;AAA0B,UAAA,SAAS,EAAEV,UAArC;AAAiD,UAAA,OAAO,EAAE;AAAEU,YAAAA,WAAW,EAAE;AAAf;AAA1D,UAHF,EAIE,KAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAC,QAAnB;AAA4B,UAAA,SAAS,EAAET,YAAvC;AAAqD,UAAA,OAAO,EAAE;AAAES,YAAAA,WAAW,EAAE;AAAf;AAA9D,UAJF,EAKE,KAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAC,OAAnB;AAA2B,UAAA,SAAS,EAAER,WAAtC;AAAmD,UAAA,OAAO,EAAE;AAAEQ,YAAAA,WAAW,EAAE;AAAf;AAA5D,UALF;AAAA;AADF;AADF,IADF;AAaD","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { useState, useMemo, useContext } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport TableauxScreen from './screens/TableauxScreen';\r\nimport WorkspaceScreen from './screens/WorkspaceScreen';\r\nimport CardScreen from './screens/CardScreen';\r\nimport SignupScreen from './screens/SignupScreen';\r\nimport LoginScreen from './screens/LoginScreen';\r\nimport { UserContext, UserState } from './context/userContext';\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\n\r\n\r\nexport default function App() {\r\n  const [userContext, setUserContext] = useState(null);\r\n\r\n  const value = useMemo(() => ({ userContext, setUserContext }), [userContext, setUserContext]);\r\n  return (\r\n    <UserContext.Provider value={value}>\r\n      <NavigationContainer>\r\n        <Stack.Navigator  initialRouteName=\"Login\">\r\n          <Stack.Screen name=\"Tableaux\" component={TableauxScreen} options={{ headerShown: false }}/>\r\n          <Stack.Screen name=\"Workspace\" component={WorkspaceScreen} options={{ headerShown: false }}/>\r\n          <Stack.Screen name=\"Card\" component={CardScreen} options={{ headerShown: false }}/>\r\n          <Stack.Screen name=\"Signup\" component={SignupScreen} options={{ headerShown: false }}/>\r\n          <Stack.Screen name=\"Login\" component={LoginScreen} options={{ headerShown: false }}/>\r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n    </UserContext.Provider>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}